/* tslint:disable */
/* eslint-disable */
/**
 * NVDB Datakatalog API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { Stedfesting } from './Stedfesting'
import {
  StedfestingFromJSON,
  StedfestingFromJSONTyped,
  StedfestingToJSON,
  StedfestingToJSONTyped,
} from './Stedfesting'
import type { Relasjonstyper } from './Relasjonstyper'
import {
  RelasjonstyperFromJSON,
  RelasjonstyperFromJSONTyped,
  RelasjonstyperToJSON,
  RelasjonstyperToJSONTyped,
} from './Relasjonstyper'
import type { Egenskapstype } from './Egenskapstype'
import {
  EgenskapstypeFromJSON,
  EgenskapstypeFromJSONTyped,
  EgenskapstypeToJSON,
  EgenskapstypeToJSONTyped,
} from './Egenskapstype'
import type { VegobjektKategori } from './VegobjektKategori'
import {
  VegobjektKategoriFromJSON,
  VegobjektKategoriFromJSONTyped,
  VegobjektKategoriToJSON,
  VegobjektKategoriToJSONTyped,
} from './VegobjektKategori'

/**
 *
 * @export
 * @interface Vegobjekttype
 */
export interface Vegobjekttype {
  /**
   *
   * @type {number}
   * @memberof Vegobjekttype
   */
  id: number
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  navn?: string
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  kortnavn?: string
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  beskrivelse?: string
  /**
   *
   * @type {Stedfesting}
   * @memberof Vegobjekttype
   */
  stedfesting?: Stedfesting
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  sosinavn?: string
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  sosinvdbnavn?: string
  /**
   *
   * @type {number}
   * @memberof Vegobjekttype
   */
  sorteringsnummer: number
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  status?: string
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  hovedkategori?: string
  /**
   *
   * @type {boolean}
   * @memberof Vegobjekttype
   */
  tidsromRelevant: boolean
  /**
   *
   * @type {boolean}
   * @memberof Vegobjekttype
   */
  konnekteringslenkeOk?: boolean
  /**
   *
   * @type {boolean}
   * @memberof Vegobjekttype
   */
  abstraktType: boolean
  /**
   *
   * @type {boolean}
   * @memberof Vegobjekttype
   */
  avledet: boolean
  /**
   *
   * @type {boolean}
   * @memberof Vegobjekttype
   */
  mHaMor: boolean
  /**
   *
   * @type {boolean}
   * @memberof Vegobjekttype
   */
  enVersjon: boolean
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  tilleggsinformasjon?: string
  /**
   *
   * @type {Array<VegobjektKategori>}
   * @memberof Vegobjekttype
   */
  kategorier: Array<VegobjektKategori>
  /**
   *
   * @type {Array<Egenskapstype>}
   * @memberof Vegobjekttype
   */
  egenskapstyper?: Array<Egenskapstype>
  /**
   *
   * @type {Relasjonstyper}
   * @memberof Vegobjekttype
   */
  relasjonstyper?: Relasjonstyper
  /**
   *
   * @type {boolean}
   * @memberof Vegobjekttype
   */
  sensitiv: boolean
}

/**
 * Check if a given object implements the Vegobjekttype interface.
 */
export function instanceOfVegobjekttype(value: object): value is Vegobjekttype {
  if (!('id' in value) || value['id'] === undefined) return false
  if (!('sorteringsnummer' in value) || value['sorteringsnummer'] === undefined)
    return false
  if (!('tidsromRelevant' in value) || value['tidsromRelevant'] === undefined)
    return false
  if (!('abstraktType' in value) || value['abstraktType'] === undefined)
    return false
  if (!('avledet' in value) || value['avledet'] === undefined) return false
  if (!('mHaMor' in value) || value['mHaMor'] === undefined) return false
  if (!('enVersjon' in value) || value['enVersjon'] === undefined) return false
  if (!('kategorier' in value) || value['kategorier'] === undefined)
    return false
  if (!('sensitiv' in value) || value['sensitiv'] === undefined) return false
  return true
}

export function VegobjekttypeFromJSON(json: any): Vegobjekttype {
  return VegobjekttypeFromJSONTyped(json, false)
}

export function VegobjekttypeFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Vegobjekttype {
  if (json == null) {
    return json
  }
  return {
    id: json['id'],
    navn: json['navn'] == null ? undefined : json['navn'],
    kortnavn: json['kortnavn'] == null ? undefined : json['kortnavn'],
    beskrivelse: json['beskrivelse'] == null ? undefined : json['beskrivelse'],
    stedfesting:
      json['stedfesting'] == null
        ? undefined
        : StedfestingFromJSON(json['stedfesting']),
    sosinavn: json['sosinavn'] == null ? undefined : json['sosinavn'],
    sosinvdbnavn:
      json['sosinvdbnavn'] == null ? undefined : json['sosinvdbnavn'],
    sorteringsnummer: json['sorteringsnummer'],
    status: json['status'] == null ? undefined : json['status'],
    hovedkategori:
      json['hovedkategori'] == null ? undefined : json['hovedkategori'],
    tidsromRelevant: json['tidsrom_relevant'],
    konnekteringslenkeOk:
      json['konnekteringslenke_ok'] == null
        ? undefined
        : json['konnekteringslenke_ok'],
    abstraktType: json['abstrakt_type'],
    avledet: json['avledet'],
    mHaMor: json['må_ha_mor'],
    enVersjon: json['en_versjon'],
    tilleggsinformasjon:
      json['tilleggsinformasjon'] == null
        ? undefined
        : json['tilleggsinformasjon'],
    kategorier: (json['kategorier'] as Array<any>).map(
      VegobjektKategoriFromJSON,
    ),
    egenskapstyper:
      json['egenskapstyper'] == null
        ? undefined
        : (json['egenskapstyper'] as Array<any>).map(EgenskapstypeFromJSON),
    relasjonstyper:
      json['relasjonstyper'] == null
        ? undefined
        : RelasjonstyperFromJSON(json['relasjonstyper']),
    sensitiv: json['sensitiv'],
  }
}

export function VegobjekttypeToJSON(json: any): Vegobjekttype {
  return VegobjekttypeToJSONTyped(json, false)
}

export function VegobjekttypeToJSONTyped(
  value?: Vegobjekttype | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    id: value['id'],
    navn: value['navn'],
    kortnavn: value['kortnavn'],
    beskrivelse: value['beskrivelse'],
    stedfesting: StedfestingToJSON(value['stedfesting']),
    sosinavn: value['sosinavn'],
    sosinvdbnavn: value['sosinvdbnavn'],
    sorteringsnummer: value['sorteringsnummer'],
    status: value['status'],
    hovedkategori: value['hovedkategori'],
    tidsrom_relevant: value['tidsromRelevant'],
    konnekteringslenke_ok: value['konnekteringslenkeOk'],
    abstrakt_type: value['abstraktType'],
    avledet: value['avledet'],
    må_ha_mor: value['mHaMor'],
    en_versjon: value['enVersjon'],
    tilleggsinformasjon: value['tilleggsinformasjon'],
    kategorier: (value['kategorier'] as Array<any>).map(
      VegobjektKategoriToJSON,
    ),
    egenskapstyper:
      value['egenskapstyper'] == null
        ? undefined
        : (value['egenskapstyper'] as Array<any>).map(EgenskapstypeToJSON),
    relasjonstyper: RelasjonstyperToJSON(value['relasjonstyper']),
    sensitiv: value['sensitiv'],
  }
}

/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package no.vegvesen.nvdb.datakatalog.model


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * 
 *
 * Values: Assosiasjon,Boolsk,Binær,Tekst,Dato,Flyttall,Heltall,Struktur,Geometri,Stedfesting,Kortdato,Tid,Liste,Tekstenum,Heltallenum,Flyttallenum
 */

enum class EgenskapstypeEnum(val value: kotlin.String) {

    @JsonProperty(value = "Assosiasjon")
    Assosiasjon("Assosiasjon"),

    @JsonProperty(value = "Boolsk")
    Boolsk("Boolsk"),

    @JsonProperty(value = "Binær")
    Binær("Binær"),

    @JsonProperty(value = "Tekst")
    Tekst("Tekst"),

    @JsonProperty(value = "Dato")
    Dato("Dato"),

    @JsonProperty(value = "Flyttall")
    Flyttall("Flyttall"),

    @JsonProperty(value = "Heltall")
    Heltall("Heltall"),

    @JsonProperty(value = "Struktur")
    Struktur("Struktur"),

    @JsonProperty(value = "Geometri")
    Geometri("Geometri"),

    @JsonProperty(value = "Stedfesting")
    Stedfesting("Stedfesting"),

    @JsonProperty(value = "Kortdato")
    Kortdato("Kortdato"),

    @JsonProperty(value = "Tid")
    Tid("Tid"),

    @JsonProperty(value = "Liste")
    Liste("Liste"),

    @JsonProperty(value = "Tekstenum")
    Tekstenum("Tekstenum"),

    @JsonProperty(value = "Heltallenum")
    Heltallenum("Heltallenum"),

    @JsonProperty(value = "Flyttallenum")
    Flyttallenum("Flyttallenum");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is EgenskapstypeEnum) "$data" else null

        /**
         * Returns a valid [EgenskapstypeEnum] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): EgenskapstypeEnum? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}


/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package no.vegvesen.nvdb.datakatalog.api

import no.vegvesen.nvdb.datakatalog.model.Egenskapstype
import no.vegvesen.nvdb.datakatalog.model.EgenskapstypeKategori
import no.vegvesen.nvdb.datakatalog.model.Enhet
import no.vegvesen.nvdb.datakatalog.model.Kategori
import no.vegvesen.nvdb.datakatalog.model.ProblemDetail
import no.vegvesen.nvdb.datakatalog.model.ProductSpecification
import no.vegvesen.nvdb.datakatalog.model.Vegobjekttype
import no.vegvesen.nvdb.datakatalog.model.Versjon

import no.vegvesen.nvdb.datakatalog.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.http.ParametersBuilder
import com.fasterxml.jackson.databind.ObjectMapper

    open class DatakatalogenApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    jsonBlock: ObjectMapper.() -> Unit = ApiClient.JSON_DEFAULT,
    ) : ApiClient(
        baseUrl,
        httpClientEngine,
        httpClientConfig,
        jsonBlock,
    ) {

        /**
        * GET /api/v1/egenskapstyper/{egenskapstypeid}
        * Returnerer angitt egenskapstype
        * 
         * @param egenskapstypeid  
         * @return Egenskapstype
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getEgenskapstype(egenskapstypeid: kotlin.Int): HttpResponse<Egenskapstype> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/egenskapstyper/{egenskapstypeid}".replace("{" + "egenskapstypeid" + "}", "$egenskapstypeid"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/vegobjekttyper/{vegobjekttypeid}/{egenskapstypeid}
        * Returnerer angitt egenskapstype for angitt vegobjekttype
        * 
         * @param vegobjekttypeid  
         * @param egenskapstypeid  
         * @return Egenskapstype
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getEgenskapstypeForVegobjekttype(vegobjekttypeid: kotlin.Int, egenskapstypeid: kotlin.Int): HttpResponse<Egenskapstype> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/vegobjekttyper/{vegobjekttypeid}/{egenskapstypeid}".replace("{" + "vegobjekttypeid" + "}", "$vegobjekttypeid").replace("{" + "egenskapstypeid" + "}", "$egenskapstypeid"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/egenskapstypekategorier
        * Returnerer alle kategorier for egenskapstypene
        * 
         * @return kotlin.collections.List<EgenskapstypeKategori>
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getEgenskapstypeKategorier(): HttpResponse<kotlin.collections.List<EgenskapstypeKategori>> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/egenskapstypekategorier",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/enheter
        * Returnerer alle enheter
        * 
         * @return kotlin.collections.List<Enhet>
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getEnheter(): HttpResponse<kotlin.collections.List<Enhet>> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/enheter",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/kategorier
        * Returnerer alle kategorier for vegobjekter
        * 
         * @return kotlin.collections.List<Kategori>
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getKategorier(): HttpResponse<kotlin.collections.List<Kategori>> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/kategorier",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/vegobjekttyper/{vegobjekttypeid}/produktspesifikasjon
        * Returnerer produktspesifikasjonen til den angitte vegobjekttypen
        * 
         * @param vegobjekttypeid  
         * @return ProductSpecification
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getProduktspesifikasjon(vegobjekttypeid: kotlin.Int): HttpResponse<ProductSpecification> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/vegobjekttyper/{vegobjekttypeid}/produktspesifikasjon".replace("{" + "vegobjekttypeid" + "}", "$vegobjekttypeid"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/vegobjekttyper/{vegobjekttypeid}
        * Returnerer angitt vegobjekttype
        * 
         * @param vegobjekttypeid  
         * @param inkluder Kommaseparert liste med hvilke informasjonsfelter som skal inkluderes i tillegg til vegobjekttypenes metadata. (optional)
         * @return Vegobjekttype
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getVegobjekttype(vegobjekttypeid: kotlin.Int, inkluder: kotlin.collections.List<kotlin.String>?): HttpResponse<Vegobjekttype> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()
            inkluder?.apply { localVariableQuery["inkluder"] = toMultiValue(this, "multi") }

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/vegobjekttyper/{vegobjekttypeid}".replace("{" + "vegobjekttypeid" + "}", "$vegobjekttypeid"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/vegobjekttyper
        * Returnerer alle vegobjekttypene
        * 
         * @param inkluder Kommaseparert liste med hvilke informasjonsfelter som skal inkluderes i tillegg til vegobjekttypenes metadata. (optional)
         * @param kategori Begrens vegobjekttyper etter kategori. (/vegobjekttyper/kategorier) (optional)
         * @return kotlin.collections.List<Vegobjekttype>
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getVegobjekttyper(inkluder: kotlin.collections.List<kotlin.String>?, kategori: kotlin.Int?): HttpResponse<kotlin.collections.List<Vegobjekttype>> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()
            inkluder?.apply { localVariableQuery["inkluder"] = toMultiValue(this, "multi") }
            kategori?.apply { localVariableQuery["kategori"] = listOf("$kategori") }

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/vegobjekttyper",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/vegobjekttyper/historisk/{versjon}
        * Returnerer alle vegobjekttypene for en gitt versjon av datakatalogen, f.eks. 2.31
        * 
         * @param versjon  
         * @param inkluder Kommaseparert liste med hvilke informasjonsfelter som skal inkluderes i tillegg til vegobjekttypenes metadata. (optional)
         * @param kategori Begrens vegobjekttyper etter kategori. (/vegobjekttyper/kategorier) (optional)
         * @return kotlin.collections.List<Vegobjekttype>
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getVegobjekttyperHistorisk(versjon: kotlin.String, inkluder: kotlin.collections.List<kotlin.String>?, kategori: kotlin.Int?): HttpResponse<kotlin.collections.List<Vegobjekttype>> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()
            inkluder?.apply { localVariableQuery["inkluder"] = toMultiValue(this, "multi") }
            kategori?.apply { localVariableQuery["kategori"] = listOf("$kategori") }

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/vegobjekttyper/historisk/{versjon}".replace("{" + "versjon" + "}", "$versjon"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v1/versjon
        * Returnerer aktiv versjon på datakatalog
        * 
         * @return Versjon
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getVersjon(): HttpResponse<Versjon> {

            val localVariableAuthNames = listOf<String>()

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v1/versjon",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = false,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        }

/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package no.vegvesen.vt.nvdb.datakatalog.model


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * Values: IKKE_SATT,PÅKREVD_ABSOLUTT,PÅKREVD_IKKE_ABSOLUTT,BETINGET,OPSJONELL,MINDRE_VIKTIG,HISTORISK
 */

@JsonClass(generateAdapter = false)
enum class Viktighet(val value: kotlin.String) {

    @Json(name = "IKKE_SATT")
    IKKE_SATT("IKKE_SATT"),

    @Json(name = "PÅKREVD_ABSOLUTT")
    PÅKREVD_ABSOLUTT("PÅKREVD_ABSOLUTT"),

    @Json(name = "PÅKREVD_IKKE_ABSOLUTT")
    PÅKREVD_IKKE_ABSOLUTT("PÅKREVD_IKKE_ABSOLUTT"),

    @Json(name = "BETINGET")
    BETINGET("BETINGET"),

    @Json(name = "OPSJONELL")
    OPSJONELL("OPSJONELL"),

    @Json(name = "MINDRE_VIKTIG")
    MINDRE_VIKTIG("MINDRE_VIKTIG"),

    @Json(name = "HISTORISK")
    HISTORISK("HISTORISK");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is Viktighet) "$data" else null

        /**
         * Returns a valid [Viktighet] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): Viktighet? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}


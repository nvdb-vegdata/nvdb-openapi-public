/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package no.vegvesen.nvdb.vegobjekter.model

import no.vegvesen.nvdb.vegobjekter.model.Geometri
import no.vegvesen.nvdb.vegobjekter.model.Vegsystemreferanse

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param veglenkesekvensid 
 * @param retning 
 * @param veglenkeType 
 * @param detaljnivå 
 * @param typeVeg 
 * @param typeVegSosi 
 * @param startdato 
 * @param geometri 
 * @param kommune 
 * @param fylke 
 * @param startposisjon 
 * @param sluttposisjon 
 * @param relativPosisjon 
 * @param lengde 
 * @param kjørefelt 
 * @param sideposisjon 
 * @param feltoversikt 
 * @param sluttdato 
 * @param vegsystemreferanse 
 * @param kontraktsområder 
 * @param riksvegruter 
 * @param vegforvaltere 
 * @param adresser 
 */
@Serializable

data class Vegsegment (

    @SerialName(value = "veglenkesekvensid") @Required val veglenkesekvensid: kotlin.Long,

    @SerialName(value = "retning") @Required val retning: Vegsegment.Retning,

    @SerialName(value = "veglenkeType") @Required val veglenkeType: Vegsegment.VeglenkeType,

    @SerialName(value = "detaljnivå") @Required val detaljnivå: Vegsegment.Detaljnivå,

    @SerialName(value = "typeVeg") @Required val typeVeg: Vegsegment.TypeVeg,

    @SerialName(value = "typeVeg_sosi") @Required val typeVegSosi: Vegsegment.TypeVegSosi,

    @SerialName(value = "startdato") @Required val startdato: kotlinx.datetime.LocalDate,

    @SerialName(value = "geometri") @Required val geometri: Geometri,

    @SerialName(value = "kommune") @Required val kommune: kotlin.Int,

    @SerialName(value = "fylke") @Required val fylke: kotlin.Int,

    @SerialName(value = "startposisjon") val startposisjon: kotlin.Double? = null,

    @SerialName(value = "sluttposisjon") val sluttposisjon: kotlin.Double? = null,

    @SerialName(value = "relativPosisjon") val relativPosisjon: kotlin.Double? = null,

    @SerialName(value = "lengde") val lengde: kotlin.Double? = null,

    @SerialName(value = "kjørefelt") val kjørefelt: kotlin.collections.List<kotlin.String>? = null,

    @SerialName(value = "sideposisjon") val sideposisjon: Vegsegment.Sideposisjon? = null,

    @SerialName(value = "feltoversikt") val feltoversikt: kotlin.collections.List<kotlin.String>? = null,

    @SerialName(value = "sluttdato") val sluttdato: kotlinx.datetime.LocalDate? = null,

    @SerialName(value = "vegsystemreferanse") val vegsystemreferanse: Vegsystemreferanse? = null,

    @SerialName(value = "kontraktsområder") val kontraktsområder: kotlin.collections.Set<kotlin.Long>? = null,

    @SerialName(value = "riksvegruter") val riksvegruter: kotlin.collections.Set<kotlin.Int>? = null,

    @SerialName(value = "vegforvaltere") val vegforvaltere: kotlin.collections.Set<kotlin.Int>? = null,

    @SerialName(value = "adresser") val adresser: kotlin.collections.Set<kotlin.Long>? = null

) {

    /**
     * 
     *
     * Values: MED,MOT
     */
    @Serializable
    enum class Retning(val value: kotlin.String) {
        @SerialName(value = "MED") MED("MED"),
        @SerialName(value = "MOT") MOT("MOT");
    }
    /**
     * 
     *
     * Values: Ukjent,DETALJERT,KONNEKTERING,DETALJERT_KONNEKTERING,HOVED
     */
    @Serializable
    enum class VeglenkeType(val value: kotlin.String) {
        @SerialName(value = "Ukjent") Ukjent("Ukjent"),
        @SerialName(value = "DETALJERT") DETALJERT("DETALJERT"),
        @SerialName(value = "KONNEKTERING") KONNEKTERING("KONNEKTERING"),
        @SerialName(value = "DETALJERT_KONNEKTERING") DETALJERT_KONNEKTERING("DETALJERT_KONNEKTERING"),
        @SerialName(value = "HOVED") HOVED("HOVED");
    }
    /**
     * 
     *
     * Values: Vegtrase,Kjørebane,Kjørefelt,Vegtrase_og_kjørebane
     */
    @Serializable
    enum class Detaljnivå(val value: kotlin.String) {
        @SerialName(value = "Vegtrase") Vegtrase("Vegtrase"),
        @SerialName(value = "Kjørebane") Kjørebane("Kjørebane"),
        @SerialName(value = "Kjørefelt") Kjørefelt("Kjørefelt"),
        @SerialName(value = "Vegtrase og kjørebane") Vegtrase_og_kjørebane("Vegtrase og kjørebane");
    }
    /**
     * 
     *
     * Values: Kanalisert_veg,Enkel_bilveg,Rampe,Rundkjøring,Bilferje,Passasjerferje,GangMinus_og_sykkelveg,Sykkelveg,Gangveg,Gågate,Fortau,Trapp,Gangfelt,Gatetun,Traktorveg,Sti,Annet
     */
    @Serializable
    enum class TypeVeg(val value: kotlin.String) {
        @SerialName(value = "Kanalisert veg") Kanalisert_veg("Kanalisert veg"),
        @SerialName(value = "Enkel bilveg") Enkel_bilveg("Enkel bilveg"),
        @SerialName(value = "Rampe") Rampe("Rampe"),
        @SerialName(value = "Rundkjøring") Rundkjøring("Rundkjøring"),
        @SerialName(value = "Bilferje") Bilferje("Bilferje"),
        @SerialName(value = "Passasjerferje") Passasjerferje("Passasjerferje"),
        @SerialName(value = "Gang- og sykkelveg") GangMinus_og_sykkelveg("Gang- og sykkelveg"),
        @SerialName(value = "Sykkelveg") Sykkelveg("Sykkelveg"),
        @SerialName(value = "Gangveg") Gangveg("Gangveg"),
        @SerialName(value = "Gågate") Gågate("Gågate"),
        @SerialName(value = "Fortau") Fortau("Fortau"),
        @SerialName(value = "Trapp") Trapp("Trapp"),
        @SerialName(value = "Gangfelt") Gangfelt("Gangfelt"),
        @SerialName(value = "Gatetun") Gatetun("Gatetun"),
        @SerialName(value = "Traktorveg") Traktorveg("Traktorveg"),
        @SerialName(value = "Sti") Sti("Sti"),
        @SerialName(value = "Annet") Annet("Annet");
    }
    /**
     * 
     *
     * Values: kanalisertVeg,enkelBilveg,rampe,rundkjøring,bilferje,passasjerferje,gangOgSykkelveg,sykkelveg,gangveg,gågate,fortau,trapp,gangfelt,gatetun,traktorveg,sti,annet
     */
    @Serializable
    enum class TypeVegSosi(val value: kotlin.String) {
        @SerialName(value = "kanalisertVeg") kanalisertVeg("kanalisertVeg"),
        @SerialName(value = "enkelBilveg") enkelBilveg("enkelBilveg"),
        @SerialName(value = "rampe") rampe("rampe"),
        @SerialName(value = "rundkjøring") rundkjøring("rundkjøring"),
        @SerialName(value = "bilferje") bilferje("bilferje"),
        @SerialName(value = "passasjerferje") passasjerferje("passasjerferje"),
        @SerialName(value = "gangOgSykkelveg") gangOgSykkelveg("gangOgSykkelveg"),
        @SerialName(value = "sykkelveg") sykkelveg("sykkelveg"),
        @SerialName(value = "gangveg") gangveg("gangveg"),
        @SerialName(value = "gågate") gågate("gågate"),
        @SerialName(value = "fortau") fortau("fortau"),
        @SerialName(value = "trapp") trapp("trapp"),
        @SerialName(value = "gangfelt") gangfelt("gangfelt"),
        @SerialName(value = "gatetun") gatetun("gatetun"),
        @SerialName(value = "traktorveg") traktorveg("traktorveg"),
        @SerialName(value = "sti") sti("sti"),
        @SerialName(value = "annet") annet("annet");
    }
    /**
     * 
     *
     * Values: MH,MV,VT,M,H,HT,VH,HV,K,V,L,R,R0
     */
    @Serializable
    enum class Sideposisjon(val value: kotlin.String) {
        @SerialName(value = "MH") MH("MH"),
        @SerialName(value = "MV") MV("MV"),
        @SerialName(value = "VT") VT("VT"),
        @SerialName(value = "M") M("M"),
        @SerialName(value = "H") H("H"),
        @SerialName(value = "HT") HT("HT"),
        @SerialName(value = "VH") VH("VH"),
        @SerialName(value = "HV") HV("HV"),
        @SerialName(value = "K") K("K"),
        @SerialName(value = "V") V("V"),
        @SerialName(value = "L") L("L"),
        @SerialName(value = "R") R("R"),
        @SerialName(value = "R0") R0("R0");
    }

}


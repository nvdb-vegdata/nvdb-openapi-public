/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package no.vegvesen.nvdb.vegobjekter.api

import no.vegvesen.nvdb.vegobjekter.model.ProblemDetail
import no.vegvesen.nvdb.vegobjekter.model.Vegobjekt
import no.vegvesen.nvdb.vegobjekter.model.VegobjekterSide

import no.vegvesen.nvdb.vegobjekter.infrastructure.*
import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.http.ParametersBuilder
import com.fasterxml.jackson.databind.ObjectMapper

    open class VegobjekterApi(
    baseUrl: String = ApiClient.BASE_URL,
    httpClientEngine: HttpClientEngine? = null,
    httpClientConfig: ((HttpClientConfig<*>) -> Unit)? = null,
    jsonBlock: ObjectMapper.() -> Unit = ApiClient.JSON_DEFAULT,
    ) : ApiClient(
        baseUrl,
        httpClientEngine,
        httpClientConfig,
        jsonBlock,
    ) {

        /**
        * GET /api/v4/vegobjekt
        * Hent enkelt vegobjekt
        * 
         * @param id ID for vegobjekt som skal hentes. 
         * @param inkluder Kommaseparert liste over hvilke informasjonselementer som skal returneres i tillegg til vegobjektenes ID. (optional)
         * @param srid Angir hvilket geografisk referansesystem som benyttes for geografisk søk, og som geometrien skal returneres i (hvis relevant). Utdata i UTM-formater begrenses til 3 desimaler, 4326/WGS84 begrenses til 8 desimaler. Mer informasjon: &lt;a href&#x3D;&#39;https://epsg.io/5972&#39;&gt;EPSG:5972&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/5973&#39;&gt;EPSG:5973&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/5975&#39;&gt;EPSG:5975&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/4326&#39;&gt;EPSG:4326&lt;/a&gt;. (optional)
         * @param inkludergeometri Et vegobjekt har opptil to geometrier, egengeometri og stedfestet geometri. Egengeometrien er plassert under &#x60;vegobjekt.egenskaper&#x60; om den finnes, stedfestet geometri er plassert under &#x60;vegobjekt.lokasjon&#x60;. I tillegg til de nevnte feltene på vegobjekt-responsen returneres også &#x60;vegobjekt.geometri&#x60; (dersom man har &#x60;inkluder&#x3D;geometri&#x60; eller &#x60;alle&#x60;), slik at man alltid finner geometrien for vegobjektet ett sted. Dette feltet er egengeometri dersom objektet har det, hvis ikke har feltet stedfestet geometri Ved hvilken av disse som er tilfelle finner man ut ved å se på &#x60;vegobjekt.geometri.egengeometri&#x60;. (optional)
         * @param inkluderEgenskaper Gir mulighet til å filtrere hvilke egenskaper som skal returneres med inkluder&#x3D;egenskaper. &#x60;basis&#x60; er alle egenskaper som ikke er assosiasjoner, stedfesting, geometri, eller lister av disse. (optional)
         * @param dybde Hvor mange nivå barn skal inkluderes. 1 betyr bare IDer, 2-n betyr ett eller flere mellomnivåer, &#39;full&#39; betyr alle nivåer. (optional)
         * @param geometritoleranse Angir om det skal returneres en forenklet geometri. Dersom parameteren utelates, returneres full geometri for vegobjektene. Nummeret angir distansetoleranse i meter for generering av forenklet geometri. (optional)
         * @param tidspunkt Finner versjonen som var gyldig denne datoen. (optional)
         * @return Vegobjekt
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getVegobjektById(id: kotlin.Long, inkluder: kotlin.collections.Set<kotlin.String>?, srid: kotlin.String?, inkludergeometri: kotlin.String?, inkluderEgenskaper: kotlin.String?, dybde: kotlin.String?, geometritoleranse: kotlin.Int?, tidspunkt: java.time.LocalDate?): HttpResponse<Vegobjekt> {

            val localVariableAuthNames = listOf<String>("bearerAuth")

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()
            id?.apply { localVariableQuery["id"] = listOf("$id") }
            inkluder?.apply { localVariableQuery["inkluder"] = toMultiValue(this, "multi") }
            srid?.apply { localVariableQuery["srid"] = listOf("$srid") }
            inkludergeometri?.apply { localVariableQuery["inkludergeometri"] = listOf("$inkludergeometri") }
            inkluderEgenskaper?.apply { localVariableQuery["inkluder_egenskaper"] = listOf("$inkluderEgenskaper") }
            dybde?.apply { localVariableQuery["dybde"] = listOf("$dybde") }
            geometritoleranse?.apply { localVariableQuery["geometritoleranse"] = listOf("$geometritoleranse") }
            tidspunkt?.apply { localVariableQuery["tidspunkt"] = listOf("$tidspunkt") }

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v4/vegobjekt",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v4/vegobjekter/{vegobjekttypeId}/{vegobjektId}
        * Hent gjeldende versjon av et vegobjekt
        * 
         * @param vegobjekttypeId Finn vegobjekter med denne vegobjekttypen. Se [Datakatalogen](https://datakatalogen.atlas.vegvesen.no) for mulige verdier.  Eksempel: 581          
         * @param vegobjektId  
         * @param inkluder Kommaseparert liste over hvilke informasjonselementer som skal returneres i tillegg til vegobjektenes ID. (optional)
         * @param srid Angir hvilket geografisk referansesystem som benyttes for geografisk søk, og som geometrien skal returneres i (hvis relevant). Utdata i UTM-formater begrenses til 3 desimaler, 4326/WGS84 begrenses til 8 desimaler. Mer informasjon: &lt;a href&#x3D;&#39;https://epsg.io/5972&#39;&gt;EPSG:5972&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/5973&#39;&gt;EPSG:5973&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/5975&#39;&gt;EPSG:5975&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/4326&#39;&gt;EPSG:4326&lt;/a&gt;. (optional)
         * @param inkludergeometri Et vegobjekt har opptil to geometrier, egengeometri og stedfestet geometri. Egengeometrien er plassert under &#x60;vegobjekt.egenskaper&#x60; om den finnes, stedfestet geometri er plassert under &#x60;vegobjekt.lokasjon&#x60;. I tillegg til de nevnte feltene på vegobjekt-responsen returneres også &#x60;vegobjekt.geometri&#x60; (dersom man har &#x60;inkluder&#x3D;geometri&#x60; eller &#x60;alle&#x60;), slik at man alltid finner geometrien for vegobjektet ett sted. Dette feltet er egengeometri dersom objektet har det, hvis ikke har feltet stedfestet geometri Ved hvilken av disse som er tilfelle finner man ut ved å se på &#x60;vegobjekt.geometri.egengeometri&#x60;. (optional)
         * @param inkluderEgenskaper Gir mulighet til å filtrere hvilke egenskaper som skal returneres med inkluder&#x3D;egenskaper. &#x60;basis&#x60; er alle egenskaper som ikke er assosiasjoner, stedfesting, geometri, eller lister av disse. (optional)
         * @param dybde Hvor mange nivå barn skal inkluderes. 1 betyr bare IDer, 2-n betyr ett eller flere mellomnivåer, &#39;full&#39; betyr alle nivåer. (optional)
         * @param geometritoleranse Angir om det skal returneres en forenklet geometri. Dersom parameteren utelates, returneres full geometri for vegobjektene. Nummeret angir distansetoleranse i meter for generering av forenklet geometri. (optional)
         * @param tidspunkt Finner versjonen som var gyldig denne datoen. (optional)
         * @return Vegobjekt
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getVegobjektById1(vegobjekttypeId: kotlin.Int, vegobjektId: kotlin.Long, inkluder: kotlin.collections.Set<kotlin.String>?, srid: kotlin.String?, inkludergeometri: kotlin.String?, inkluderEgenskaper: kotlin.String?, dybde: kotlin.String?, geometritoleranse: kotlin.Int?, tidspunkt: java.time.LocalDate?): HttpResponse<Vegobjekt> {

            val localVariableAuthNames = listOf<String>("bearerAuth")

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()
            inkluder?.apply { localVariableQuery["inkluder"] = toMultiValue(this, "multi") }
            srid?.apply { localVariableQuery["srid"] = listOf("$srid") }
            inkludergeometri?.apply { localVariableQuery["inkludergeometri"] = listOf("$inkludergeometri") }
            inkluderEgenskaper?.apply { localVariableQuery["inkluder_egenskaper"] = listOf("$inkluderEgenskaper") }
            dybde?.apply { localVariableQuery["dybde"] = listOf("$dybde") }
            geometritoleranse?.apply { localVariableQuery["geometritoleranse"] = listOf("$geometritoleranse") }
            tidspunkt?.apply { localVariableQuery["tidspunkt"] = listOf("$tidspunkt") }

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v4/vegobjekter/{vegobjekttypeId}/{vegobjektId}".replace("{" + "vegobjekttypeId" + "}", "$vegobjekttypeId").replace("{" + "vegobjektId" + "}", "$vegobjektId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v4/vegobjekter/{vegobjekttypeId}/{vegobjektId}/{versjon}
        * Hent spesifikk versjon av et vegobjekt
        * 
         * @param vegobjekttypeId Finn vegobjekter med denne vegobjekttypen. Se [Datakatalogen](https://datakatalogen.atlas.vegvesen.no) for mulige verdier.  Eksempel: 581          
         * @param vegobjektId  
         * @param versjon  
         * @param inkluder Kommaseparert liste over hvilke informasjonselementer som skal returneres i tillegg til vegobjektenes ID. (optional)
         * @param srid Angir hvilket geografisk referansesystem som benyttes for geografisk søk, og som geometrien skal returneres i (hvis relevant). Utdata i UTM-formater begrenses til 3 desimaler, 4326/WGS84 begrenses til 8 desimaler. Mer informasjon: &lt;a href&#x3D;&#39;https://epsg.io/5972&#39;&gt;EPSG:5972&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/5973&#39;&gt;EPSG:5973&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/5975&#39;&gt;EPSG:5975&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/4326&#39;&gt;EPSG:4326&lt;/a&gt;. (optional)
         * @param inkludergeometri Et vegobjekt har opptil to geometrier, egengeometri og stedfestet geometri. Egengeometrien er plassert under &#x60;vegobjekt.egenskaper&#x60; om den finnes, stedfestet geometri er plassert under &#x60;vegobjekt.lokasjon&#x60;. I tillegg til de nevnte feltene på vegobjekt-responsen returneres også &#x60;vegobjekt.geometri&#x60; (dersom man har &#x60;inkluder&#x3D;geometri&#x60; eller &#x60;alle&#x60;), slik at man alltid finner geometrien for vegobjektet ett sted. Dette feltet er egengeometri dersom objektet har det, hvis ikke har feltet stedfestet geometri Ved hvilken av disse som er tilfelle finner man ut ved å se på &#x60;vegobjekt.geometri.egengeometri&#x60;. (optional)
         * @param inkluderEgenskaper Gir mulighet til å filtrere hvilke egenskaper som skal returneres med inkluder&#x3D;egenskaper. &#x60;basis&#x60; er alle egenskaper som ikke er assosiasjoner, stedfesting, geometri, eller lister av disse. (optional)
         * @param dybde Hvor mange nivå barn skal inkluderes. 1 betyr bare IDer, 2-n betyr ett eller flere mellomnivåer, &#39;full&#39; betyr alle nivåer. (optional)
         * @param geometritoleranse Angir om det skal returneres en forenklet geometri. Dersom parameteren utelates, returneres full geometri for vegobjektene. Nummeret angir distansetoleranse i meter for generering av forenklet geometri. (optional)
         * @param tidspunkt Finner versjonen som var gyldig denne datoen. (optional)
         * @return Vegobjekt
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getVegobjektByIdAndVersjon(vegobjekttypeId: kotlin.Int, vegobjektId: kotlin.Long, versjon: kotlin.Int, inkluder: kotlin.collections.Set<kotlin.String>?, srid: kotlin.String?, inkludergeometri: kotlin.String?, inkluderEgenskaper: kotlin.String?, dybde: kotlin.String?, geometritoleranse: kotlin.Int?, tidspunkt: java.time.LocalDate?): HttpResponse<Vegobjekt> {

            val localVariableAuthNames = listOf<String>("bearerAuth")

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()
            inkluder?.apply { localVariableQuery["inkluder"] = toMultiValue(this, "multi") }
            srid?.apply { localVariableQuery["srid"] = listOf("$srid") }
            inkludergeometri?.apply { localVariableQuery["inkludergeometri"] = listOf("$inkludergeometri") }
            inkluderEgenskaper?.apply { localVariableQuery["inkluder_egenskaper"] = listOf("$inkluderEgenskaper") }
            dybde?.apply { localVariableQuery["dybde"] = listOf("$dybde") }
            geometritoleranse?.apply { localVariableQuery["geometritoleranse"] = listOf("$geometritoleranse") }
            tidspunkt?.apply { localVariableQuery["tidspunkt"] = listOf("$tidspunkt") }

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v4/vegobjekter/{vegobjekttypeId}/{vegobjektId}/{versjon}".replace("{" + "vegobjekttypeId" + "}", "$vegobjekttypeId").replace("{" + "vegobjektId" + "}", "$vegobjektId").replace("{" + "versjon" + "}", "$versjon"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v4/vegobjekter/{vegobjekttypeId}/{vegobjektId}/versjoner
        * Hent alle versjoner av et vegobjekt
        * 
         * @param vegobjekttypeId Finn vegobjekter med denne vegobjekttypen. Se [Datakatalogen](https://datakatalogen.atlas.vegvesen.no) for mulige verdier.  Eksempel: 581          
         * @param vegobjektId  
         * @param inkluder Kommaseparert liste over hvilke informasjonselementer som skal returneres i tillegg til vegobjektenes ID. (optional)
         * @param srid Angir hvilket geografisk referansesystem som benyttes for geografisk søk, og som geometrien skal returneres i (hvis relevant). Utdata i UTM-formater begrenses til 3 desimaler, 4326/WGS84 begrenses til 8 desimaler. Mer informasjon: &lt;a href&#x3D;&#39;https://epsg.io/5972&#39;&gt;EPSG:5972&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/5973&#39;&gt;EPSG:5973&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/5975&#39;&gt;EPSG:5975&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/4326&#39;&gt;EPSG:4326&lt;/a&gt;. (optional)
         * @param inkludergeometri Et vegobjekt har opptil to geometrier, egengeometri og stedfestet geometri. Egengeometrien er plassert under &#x60;vegobjekt.egenskaper&#x60; om den finnes, stedfestet geometri er plassert under &#x60;vegobjekt.lokasjon&#x60;. I tillegg til de nevnte feltene på vegobjekt-responsen returneres også &#x60;vegobjekt.geometri&#x60; (dersom man har &#x60;inkluder&#x3D;geometri&#x60; eller &#x60;alle&#x60;), slik at man alltid finner geometrien for vegobjektet ett sted. Dette feltet er egengeometri dersom objektet har det, hvis ikke har feltet stedfestet geometri Ved hvilken av disse som er tilfelle finner man ut ved å se på &#x60;vegobjekt.geometri.egengeometri&#x60;. (optional)
         * @param inkluderEgenskaper Gir mulighet til å filtrere hvilke egenskaper som skal returneres med inkluder&#x3D;egenskaper. &#x60;basis&#x60; er alle egenskaper som ikke er assosiasjoner, stedfesting, geometri, eller lister av disse. (optional)
         * @param dybde Hvor mange nivå barn skal inkluderes. 1 betyr bare IDer, 2-n betyr ett eller flere mellomnivåer, &#39;full&#39; betyr alle nivåer. (optional)
         * @param geometritoleranse Angir om det skal returneres en forenklet geometri. Dersom parameteren utelates, returneres full geometri for vegobjektene. Nummeret angir distansetoleranse i meter for generering av forenklet geometri. (optional)
         * @param tidspunkt Finner versjonen som var gyldig denne datoen. (optional)
         * @return kotlin.collections.List<Vegobjekt>
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getVegobjektVersjoner(vegobjekttypeId: kotlin.Int, vegobjektId: kotlin.Long, inkluder: kotlin.collections.Set<kotlin.String>?, srid: kotlin.String?, inkludergeometri: kotlin.String?, inkluderEgenskaper: kotlin.String?, dybde: kotlin.String?, geometritoleranse: kotlin.Int?, tidspunkt: java.time.LocalDate?): HttpResponse<kotlin.collections.List<Vegobjekt>> {

            val localVariableAuthNames = listOf<String>("bearerAuth")

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()
            inkluder?.apply { localVariableQuery["inkluder"] = toMultiValue(this, "multi") }
            srid?.apply { localVariableQuery["srid"] = listOf("$srid") }
            inkludergeometri?.apply { localVariableQuery["inkludergeometri"] = listOf("$inkludergeometri") }
            inkluderEgenskaper?.apply { localVariableQuery["inkluder_egenskaper"] = listOf("$inkluderEgenskaper") }
            dybde?.apply { localVariableQuery["dybde"] = listOf("$dybde") }
            geometritoleranse?.apply { localVariableQuery["geometritoleranse"] = listOf("$geometritoleranse") }
            tidspunkt?.apply { localVariableQuery["tidspunkt"] = listOf("$tidspunkt") }

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v4/vegobjekter/{vegobjekttypeId}/{vegobjektId}/versjoner".replace("{" + "vegobjekttypeId" + "}", "$vegobjekttypeId").replace("{" + "vegobjektId" + "}", "$vegobjektId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        /**
        * GET /api/v4/vegobjekter/{vegobjekttypeId}
        * Hent vegobjekter av en type
        * 
         * @param vegobjekttypeId Finn vegobjekter med denne vegobjekttypen. Se [Datakatalogen](https://datakatalogen.atlas.vegvesen.no) for mulige verdier.  Eksempel: 581          
         * @param ider Kommaseparert liste med vegobjekt-IDer. (optional)
         * @param inkluder Kommaseparert liste over hvilke informasjonselementer som skal returneres i tillegg til vegobjektenes ID. (optional)
         * @param srid Angir hvilket geografisk referansesystem som benyttes for geografisk søk, og som geometrien skal returneres i (hvis relevant). Utdata i UTM-formater begrenses til 3 desimaler, 4326/WGS84 begrenses til 8 desimaler. Mer informasjon: &lt;a href&#x3D;&#39;https://epsg.io/5972&#39;&gt;EPSG:5972&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/5973&#39;&gt;EPSG:5973&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/5975&#39;&gt;EPSG:5975&lt;/a&gt; &lt;a href&#x3D;&#39;https://epsg.io/4326&#39;&gt;EPSG:4326&lt;/a&gt;. (optional)
         * @param inkludergeometri Et vegobjekt har opptil to geometrier, egengeometri og stedfestet geometri. Egengeometrien er plassert under &#x60;vegobjekt.egenskaper&#x60; om den finnes, stedfestet geometri er plassert under &#x60;vegobjekt.lokasjon&#x60;. I tillegg til de nevnte feltene på vegobjekt-responsen returneres også &#x60;vegobjekt.geometri&#x60; (dersom man har &#x60;inkluder&#x3D;geometri&#x60; eller &#x60;alle&#x60;), slik at man alltid finner geometrien for vegobjektet ett sted. Dette feltet er egengeometri dersom objektet har det, hvis ikke har feltet stedfestet geometri Ved hvilken av disse som er tilfelle finner man ut ved å se på &#x60;vegobjekt.geometri.egengeometri&#x60;. (optional)
         * @param inkluderEgenskaper Gir mulighet til å filtrere hvilke egenskaper som skal returneres med inkluder&#x3D;egenskaper. &#x60;basis&#x60; er alle egenskaper som ikke er assosiasjoner, stedfesting, geometri, eller lister av disse. (optional)
         * @param segmentering Angir om lengde skal inkludere bare deler av vegnettet som er innenfor søkeparametre tilknyttet segmentering (fylke, kommune, vegsystemreferanse, kontraktsområde, riksvegrute, vegforvalter).  Default: &#x60;true&#x60; (optional)
         * @param fylke Filtrer på fylke. Kommaseparert liste. Se /omrader/fylker for mulige verdier.  Eksempel: &#x60;50&#x60; (optional)
         * @param kommune Filtrer på kommune. Kommaseparert liste. Se /omrader/kommuner for mulige verdier.  Eksempel: &#x60;5001&#x60; (optional)
         * @param kontraktsomrade Filtrer på kontraktsomrade. Kommaseparert liste. Se /omrader/kontraktsomrader for mulige verdier.  Eksempel: &#x60;9503 Midtre Hålogaland 2021-2026&#x60; (optional)
         * @param riksvegrute Filtrer på riksvegrute. Kommaseparert liste. Se /omrader/riksvegruter for mulige verdier.  Eksempel: &#x60;RUTE4A&#x60; eller som enumid &#x60;20290&#x60; (optional)
         * @param vegforvalter Filtrer på vegforvalter. Kommaseparert liste. Se [/omrader/api/v4/vegforvaltere](https://nvdbapiles.atlas.vegvesen.no/webjars/swagger-ui/index.html?urls.primaryName&#x3D;Omr%C3%A5der) for mulige verdier.  Eksempel: &#x60;Møre og Romsdal fylkeskommune&#x60; eller som enumid &#x60;21774&#x60; (optional)
         * @param vegsystemreferanse Filtrer vegobjekter på [vegsystemreferanse](https://nvdbapiles-v3.atlas.vegvesen.no/dokumentasjon/#vegsystemreferanse). Kommaseparert liste. Legg til kommunenummer i starten av vegsystemreferansen for å filtrere på område.  Eksempel: &#x60;EV6S1D1 m12&#x60; (optional)
         * @param kartutsnitt Filtrer vegobjekter med kartutsnitt i det gjeldende geografiske referansesystemet (&#x60;srid&#x60;-paramteret). Formatet er &#x60;minX, minY, maxX, maxY&#x60;. Merk at vegobjektets bounding box benyttes for sammenligning, som kan medføre at vegobjekter som er utenfor kartutsnittet også returneres. For å unngå dette, kan du bruke &#x60;polygon&#x60; i stedet.  Eksempel: &#x60;265273, 7019372, 346553, 7061071&#x60; (optional)
         * @param polygon Filtrer vegobjekter med polygon i det gjeldende geografiske referansesystemet (&#x60;srid&#x60;-paramteret).  Eksempel: &#x60;20000 6520000, 20500 6520000, 21000 6500000, 20000 6520000&#x60; (optional)
         * @param typeveg Filtrer Relasjonstype.vegobjekter på type veg på vegnettet objektet er stedfestet på. Kommaseparert liste.  Eksempel: &#x60;kanalisertVeg, enkelBilveg, rampe, rundkjøring, bilferje, passasjerferje, gangOgSykkelveg, sykkelveg, gangveg, gågate, fortau, trapp, gangfelt, gatetun, traktorveg, sti, annet&#x60; (optional)
         * @param adskiltelop Filtrer vegobjekter på om de er stedfestet hvor det er en Strekning med verdi satt for «adskilte løp». (optional)
         * @param kryssystem Filtrer vegobjekter på om de er stedfestet på samme sted hvor det er et Kryssystem. (optional)
         * @param sideanlegg Filtrer vegobjekter på om de er stedfestet på samme sted hvor det er et Sideanlegg. (optional)
         * @param trafikantgruppe Filtrer vegobjekter på trafikantgruppe. (optional)
         * @param antall Angir hvor mange objekter som skal returneres. Øvre grense er avhengig av størrelse på respons, og vil kunne variere fra endepunkt til endepunkt. Dersom det angis en verdi for antall som overskrider maksimum, vil maksimumsverdi benyttes. Se også &#x60;sidestørrelse&#x60; i responsens &#x60;metadata&#x60;-objekt. (optional)
         * @param start Angir offset for hvilke objekter som skal returneres. Denne får man i metadata-feltet i responsen. (optional)
         * @param geometritoleranse Angir om det skal returneres en forenklet geometri. Dersom parameteren utelates, returneres full geometri for vegobjektene. Nummeret angir distansetoleranse i meter for generering av forenklet geometri. (optional)
         * @param tidspunkt Finner versjonen som var gyldig denne datoen. (optional)
         * @param alleVersjoner Returner alle versjoner som matcher de oppgitte parametrene. Dersom ikke satt eller &#x60;false&#x60; vil kun objekter uten sluttdato returneres. (optional)
         * @param inkluderAntall Hvorvidt totalt antall objekter skal returneres i responsen. Default er &#x60;false&#x60;. (optional)
         * @param veglenkesekvens Filtrer vegobjekter på om de er stedfestet på gjeldende veglenkesekvenser. Kommaseparert liste.  Eksempel: &#x60;0.37@319531,0.83-0.97@41640&#x60; (optional)
         * @param egenskap Filtrer vegobjekter på egenskaper, relasjoner og overlapp. Se [dokumentasjon](https://nvdb.atlas.vegvesen.no/docs/produkter/nvdbapil/v4/introduksjon/Avanserte_filter) (optional)
         * @param overlapp Filtrer vegobjekter på overlapp. Se [dokumentasjon](https://nvdb.atlas.vegvesen.no/docs/produkter/nvdbapil/v4/introduksjon/Avanserte_filter) (optional)
         * @param veglenketype Filtrer vegobjekter på veglenketype på vegnettet objektet er stedfestet. Kommaseparert liste. (optional)
         * @param detaljniva Filtrer vegobjekter på detaljnivå på vegnettet objektet er stedfestet på (kortnavn fra datakatalogen). (optional)
         * @param endretEtter Hente endringer siden sist. Eksempel: 2024-12-02T10:15:30.123456 (optional)
         * @return VegobjekterSide
        */
            @Suppress("UNCHECKED_CAST")
        open suspend fun getVegobjekterByType(vegobjekttypeId: kotlin.Int, ider: kotlin.collections.Set<kotlin.Long>?, inkluder: kotlin.collections.List<kotlin.String>?, srid: kotlin.String?, inkludergeometri: kotlin.String?, inkluderEgenskaper: kotlin.String?, segmentering: kotlin.Boolean?, fylke: kotlin.collections.Set<kotlin.Int>?, kommune: kotlin.collections.Set<kotlin.Int>?, kontraktsomrade: kotlin.collections.Set<kotlin.String>?, riksvegrute: kotlin.collections.Set<kotlin.String>?, vegforvalter: kotlin.collections.Set<kotlin.String>?, vegsystemreferanse: kotlin.collections.Set<kotlin.String>?, kartutsnitt: kotlin.String?, polygon: kotlin.String?, typeveg: kotlin.collections.Set<kotlin.String>?, adskiltelop: kotlin.collections.Set<kotlin.String>?, kryssystem: kotlin.Boolean?, sideanlegg: kotlin.Boolean?, trafikantgruppe: kotlin.String?, antall: kotlin.Int?, start: kotlin.String?, geometritoleranse: kotlin.Int?, tidspunkt: java.time.LocalDate?, alleVersjoner: kotlin.Boolean?, inkluderAntall: kotlin.Boolean?, veglenkesekvens: kotlin.collections.Set<kotlin.String>?, egenskap: kotlin.collections.List<kotlin.String>?, overlapp: kotlin.collections.List<kotlin.String>?, veglenketype: kotlin.collections.Set<kotlin.String>?, detaljniva: kotlin.collections.Set<kotlin.String>?, endretEtter: java.time.OffsetDateTime?): HttpResponse<VegobjekterSide> {

            val localVariableAuthNames = listOf<String>("bearerAuth")

            val localVariableBody = 
                    io.ktor.client.utils.EmptyContent

            val localVariableQuery = mutableMapOf<String, List<String>>()
            ider?.apply { localVariableQuery["ider"] = toMultiValue(this, "multi") }
            inkluder?.apply { localVariableQuery["inkluder"] = toMultiValue(this, "multi") }
            srid?.apply { localVariableQuery["srid"] = listOf("$srid") }
            inkludergeometri?.apply { localVariableQuery["inkludergeometri"] = listOf("$inkludergeometri") }
            inkluderEgenskaper?.apply { localVariableQuery["inkluder_egenskaper"] = listOf("$inkluderEgenskaper") }
            segmentering?.apply { localVariableQuery["segmentering"] = listOf("$segmentering") }
            fylke?.apply { localVariableQuery["fylke"] = toMultiValue(this, "multi") }
            kommune?.apply { localVariableQuery["kommune"] = toMultiValue(this, "multi") }
            kontraktsomrade?.apply { localVariableQuery["kontraktsomrade"] = toMultiValue(this, "multi") }
            riksvegrute?.apply { localVariableQuery["riksvegrute"] = toMultiValue(this, "multi") }
            vegforvalter?.apply { localVariableQuery["vegforvalter"] = toMultiValue(this, "multi") }
            vegsystemreferanse?.apply { localVariableQuery["vegsystemreferanse"] = toMultiValue(this, "multi") }
            kartutsnitt?.apply { localVariableQuery["kartutsnitt"] = listOf("$kartutsnitt") }
            polygon?.apply { localVariableQuery["polygon"] = listOf("$polygon") }
            typeveg?.apply { localVariableQuery["typeveg"] = toMultiValue(this, "multi") }
            adskiltelop?.apply { localVariableQuery["adskiltelop"] = toMultiValue(this, "multi") }
            kryssystem?.apply { localVariableQuery["kryssystem"] = listOf("$kryssystem") }
            sideanlegg?.apply { localVariableQuery["sideanlegg"] = listOf("$sideanlegg") }
            trafikantgruppe?.apply { localVariableQuery["trafikantgruppe"] = listOf("$trafikantgruppe") }
            antall?.apply { localVariableQuery["antall"] = listOf("$antall") }
            start?.apply { localVariableQuery["start"] = listOf("$start") }
            geometritoleranse?.apply { localVariableQuery["geometritoleranse"] = listOf("$geometritoleranse") }
            tidspunkt?.apply { localVariableQuery["tidspunkt"] = listOf("$tidspunkt") }
            alleVersjoner?.apply { localVariableQuery["alle_versjoner"] = listOf("$alleVersjoner") }
            inkluderAntall?.apply { localVariableQuery["inkluderAntall"] = listOf("$inkluderAntall") }
            veglenkesekvens?.apply { localVariableQuery["veglenkesekvens"] = toMultiValue(this, "multi") }
            egenskap?.apply { localVariableQuery["egenskap"] = toMultiValue(this, "multi") }
            overlapp?.apply { localVariableQuery["overlapp"] = toMultiValue(this, "multi") }
            veglenketype?.apply { localVariableQuery["veglenketype"] = toMultiValue(this, "multi") }
            detaljniva?.apply { localVariableQuery["detaljniva"] = toMultiValue(this, "multi") }
            endretEtter?.apply { localVariableQuery["endret_etter"] = listOf("$endretEtter") }

            val localVariableHeaders = mutableMapOf<String, String>()

            val localVariableConfig = RequestConfig<kotlin.Any?>(
            RequestMethod.GET,
            "/api/v4/vegobjekter/{vegobjekttypeId}".replace("{" + "vegobjekttypeId" + "}", "$vegobjekttypeId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            )

            return request(
            localVariableConfig,
            localVariableBody,
            localVariableAuthNames
            ).wrap()
            }

        }

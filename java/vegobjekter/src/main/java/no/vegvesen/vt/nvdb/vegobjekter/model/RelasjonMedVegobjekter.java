/*
 * NVDB API Les Vegobjekter
 * Dette API-et brukes til å lese vegobjekter. Les mer om bruk av API-et på https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v4/Vegobjekter
 *
 * The version of the OpenAPI document: v4
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.vt.nvdb.vegobjekter.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import no.vegvesen.vt.nvdb.vegobjekter.model.Relasjon;
import no.vegvesen.vt.nvdb.vegobjekter.model.Relasjonstype;
import no.vegvesen.vt.nvdb.vegobjekter.model.Vegobjekt;
import no.vegvesen.vt.nvdb.vegobjekter.model.VegobjektType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RelasjonMedVegobjekter
 */
@JsonPropertyOrder({
  RelasjonMedVegobjekter.JSON_PROPERTY_VEGOBJEKTER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
@JsonIgnoreProperties(
  value = "relasjonstype", // ignore manually set relasjonstype, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the relasjonstype to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "relasjonstype", visible = true)

public class RelasjonMedVegobjekter extends Relasjon {
  public static final String JSON_PROPERTY_VEGOBJEKTER = "vegobjekter";
  @jakarta.annotation.Nonnull
  private List<Vegobjekt> vegobjekter = new ArrayList<>();

  public RelasjonMedVegobjekter() {

  }

  public RelasjonMedVegobjekter vegobjekter(@jakarta.annotation.Nonnull List<Vegobjekt> vegobjekter) {
    
    this.vegobjekter = vegobjekter;
    return this;
  }

  public RelasjonMedVegobjekter addVegobjekterItem(Vegobjekt vegobjekterItem) {
    if (this.vegobjekter == null) {
      this.vegobjekter = new ArrayList<>();
    }
    this.vegobjekter.add(vegobjekterItem);
    return this;
  }

  /**
   * Get vegobjekter
   * @return vegobjekter
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VEGOBJEKTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Vegobjekt> getVegobjekter() {
    return vegobjekter;
  }


  @JsonProperty(JSON_PROPERTY_VEGOBJEKTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVegobjekter(@jakarta.annotation.Nonnull List<Vegobjekt> vegobjekter) {
    this.vegobjekter = vegobjekter;
  }


  @Override
  public RelasjonMedVegobjekter id(@jakarta.annotation.Nonnull Integer id) {
    this.setId(id);
    return this;
  }

  @Override
  public RelasjonMedVegobjekter type(@jakarta.annotation.Nonnull VegobjektType type) {
    this.setType(type);
    return this;
  }

  @Override
  public RelasjonMedVegobjekter listeid(@jakarta.annotation.Nullable Integer listeid) {
    this.setListeid(listeid);
    return this;
  }

  @Override
  public RelasjonMedVegobjekter relasjonstype(@jakarta.annotation.Nonnull Relasjonstype relasjonstype) {
    this.setRelasjonstype(relasjonstype);
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RelasjonMedVegobjekter relasjonMedVegobjekter = (RelasjonMedVegobjekter) o;
    return Objects.equals(this.vegobjekter, relasjonMedVegobjekter.vegobjekter) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vegobjekter, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RelasjonMedVegobjekter {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    vegobjekter: ").append(toIndentedString(vegobjekter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


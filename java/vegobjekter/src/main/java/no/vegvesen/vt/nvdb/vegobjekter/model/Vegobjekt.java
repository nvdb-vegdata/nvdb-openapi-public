/*
 * NVDB API Les Vegobjekter
 * Dette API-et brukes til å lese vegobjekter. Les mer om bruk av API-et på https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v4/Vegobjekter
 *
 * The version of the OpenAPI document: v4
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.vt.nvdb.vegobjekter.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import no.vegvesen.vt.nvdb.vegobjekter.model.Egenskap;
import no.vegvesen.vt.nvdb.vegobjekter.model.Lokasjon;
import no.vegvesen.vt.nvdb.vegobjekter.model.Relasjoner;
import no.vegvesen.vt.nvdb.vegobjekter.model.UtledetGeometri;
import no.vegvesen.vt.nvdb.vegobjekter.model.VegobjektMetadata;
import no.vegvesen.vt.nvdb.vegobjekter.model.Vegsegment;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Vegobjekt
 */
@JsonPropertyOrder({
  Vegobjekt.JSON_PROPERTY_ID,
  Vegobjekt.JSON_PROPERTY_HREF,
  Vegobjekt.JSON_PROPERTY_METADATA,
  Vegobjekt.JSON_PROPERTY_EGENSKAPER,
  Vegobjekt.JSON_PROPERTY_GEOMETRI,
  Vegobjekt.JSON_PROPERTY_LOKASJON,
  Vegobjekt.JSON_PROPERTY_RELASJONER,
  Vegobjekt.JSON_PROPERTY_VEGSEGMENTER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class Vegobjekt {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private Long id;

  public static final String JSON_PROPERTY_HREF = "href";
  @jakarta.annotation.Nonnull
  private String href;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  @jakarta.annotation.Nullable
  private VegobjektMetadata metadata;

  public static final String JSON_PROPERTY_EGENSKAPER = "egenskaper";
  @jakarta.annotation.Nullable
  private List<Egenskap> egenskaper = new ArrayList<>();

  public static final String JSON_PROPERTY_GEOMETRI = "geometri";
  @jakarta.annotation.Nullable
  private UtledetGeometri geometri;

  public static final String JSON_PROPERTY_LOKASJON = "lokasjon";
  @jakarta.annotation.Nullable
  private Lokasjon lokasjon;

  public static final String JSON_PROPERTY_RELASJONER = "relasjoner";
  @jakarta.annotation.Nullable
  private Relasjoner relasjoner;

  public static final String JSON_PROPERTY_VEGSEGMENTER = "vegsegmenter";
  @jakarta.annotation.Nullable
  private List<Vegsegment> vegsegmenter = new ArrayList<>();

  public Vegobjekt() {
  }

  public Vegobjekt id(@jakarta.annotation.Nonnull Long id) {
    
    this.id = id;
    return this;
  }

  /**
   * Vegobjektets id i NVDB
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull Long id) {
    this.id = id;
  }

  public Vegobjekt href(@jakarta.annotation.Nonnull String href) {
    
    this.href = href;
    return this;
  }

  /**
   * URL-en til dette vegobjektet
   * @return href
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHref(@jakarta.annotation.Nonnull String href) {
    this.href = href;
  }

  public Vegobjekt metadata(@jakarta.annotation.Nullable VegobjektMetadata metadata) {
    
    this.metadata = metadata;
    return this;
  }

  /**
   * Vegobjektets metadata. Inneholder ikke sluttdato dersom objektet ikke har noe sluttdato. Tilstede dersom inkluder&#x3D;alle|metadata
   * @return metadata
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VegobjektMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(@jakarta.annotation.Nullable VegobjektMetadata metadata) {
    this.metadata = metadata;
  }

  public Vegobjekt egenskaper(@jakarta.annotation.Nullable List<Egenskap> egenskaper) {
    
    this.egenskaper = egenskaper;
    return this;
  }

  public Vegobjekt addEgenskaperItem(Egenskap egenskaperItem) {
    if (this.egenskaper == null) {
      this.egenskaper = new ArrayList<>();
    }
    this.egenskaper.add(egenskaperItem);
    return this;
  }

  /**
   * Objektets egenskaper. Tilstede dersom inkluder&#x3D;alle|egenskaper. Inneholder ikke stedfestings- og relasjonsegenskaper til forskjell fra Les API V3 (tilsvarende informasjon finnes i vegobjekt.lokasjon og vegobjekt.relasjoner).
   * @return egenskaper
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EGENSKAPER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Egenskap> getEgenskaper() {
    return egenskaper;
  }


  @JsonProperty(JSON_PROPERTY_EGENSKAPER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEgenskaper(@jakarta.annotation.Nullable List<Egenskap> egenskaper) {
    this.egenskaper = egenskaper;
  }

  public Vegobjekt geometri(@jakarta.annotation.Nullable UtledetGeometri geometri) {
    
    this.geometri = geometri;
    return this;
  }

  /**
   * Objektets geometri på vegnettet, eller egengeometri. Tilstede dersom inkluder&#x3D;alle|geometri. Kan være utelatt dersom objektet ikke har noe geometri.
   * @return geometri
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GEOMETRI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UtledetGeometri getGeometri() {
    return geometri;
  }


  @JsonProperty(JSON_PROPERTY_GEOMETRI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeometri(@jakarta.annotation.Nullable UtledetGeometri geometri) {
    this.geometri = geometri;
  }

  public Vegobjekt lokasjon(@jakarta.annotation.Nullable Lokasjon lokasjon) {
    
    this.lokasjon = lokasjon;
    return this;
  }

  /**
   * Plasseringen av dette objektet. Tilstede dersom inkluder&#x3D;alle|lokasjon
   * @return lokasjon
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOKASJON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Lokasjon getLokasjon() {
    return lokasjon;
  }


  @JsonProperty(JSON_PROPERTY_LOKASJON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLokasjon(@jakarta.annotation.Nullable Lokasjon lokasjon) {
    this.lokasjon = lokasjon;
  }

  public Vegobjekt relasjoner(@jakarta.annotation.Nullable Relasjoner relasjoner) {
    
    this.relasjoner = relasjoner;
    return this;
  }

  /**
   * Objektets foreldre og barn. Tilstede dersom inkluder&#x3D;alle|relasjoner
   * @return relasjoner
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELASJONER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Relasjoner getRelasjoner() {
    return relasjoner;
  }


  @JsonProperty(JSON_PROPERTY_RELASJONER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelasjoner(@jakarta.annotation.Nullable Relasjoner relasjoner) {
    this.relasjoner = relasjoner;
  }

  public Vegobjekt vegsegmenter(@jakarta.annotation.Nullable List<Vegsegment> vegsegmenter) {
    
    this.vegsegmenter = vegsegmenter;
    return this;
  }

  public Vegobjekt addVegsegmenterItem(Vegsegment vegsegmenterItem) {
    if (this.vegsegmenter == null) {
      this.vegsegmenter = new ArrayList<>();
    }
    this.vegsegmenter.add(vegsegmenterItem);
    return this;
  }

  /**
   * Segmenter for dette objektet. Tilstede dersom inkluder&#x3D;alle|vegsegmenter
   * @return vegsegmenter
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VEGSEGMENTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Vegsegment> getVegsegmenter() {
    return vegsegmenter;
  }


  @JsonProperty(JSON_PROPERTY_VEGSEGMENTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVegsegmenter(@jakarta.annotation.Nullable List<Vegsegment> vegsegmenter) {
    this.vegsegmenter = vegsegmenter;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vegobjekt vegobjekt = (Vegobjekt) o;
    return Objects.equals(this.id, vegobjekt.id) &&
        Objects.equals(this.href, vegobjekt.href) &&
        Objects.equals(this.metadata, vegobjekt.metadata) &&
        Objects.equals(this.egenskaper, vegobjekt.egenskaper) &&
        Objects.equals(this.geometri, vegobjekt.geometri) &&
        Objects.equals(this.lokasjon, vegobjekt.lokasjon) &&
        Objects.equals(this.relasjoner, vegobjekt.relasjoner) &&
        Objects.equals(this.vegsegmenter, vegobjekt.vegsegmenter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, href, metadata, egenskaper, geometri, lokasjon, relasjoner, vegsegmenter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vegobjekt {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    egenskaper: ").append(toIndentedString(egenskaper)).append("\n");
    sb.append("    geometri: ").append(toIndentedString(geometri)).append("\n");
    sb.append("    lokasjon: ").append(toIndentedString(lokasjon)).append("\n");
    sb.append("    relasjoner: ").append(toIndentedString(relasjoner)).append("\n");
    sb.append("    vegsegmenter: ").append(toIndentedString(vegsegmenter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


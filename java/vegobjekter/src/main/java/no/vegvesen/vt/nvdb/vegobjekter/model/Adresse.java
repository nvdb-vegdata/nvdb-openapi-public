/*
 * NVDB API Les Vegobjekter
 * Dette API-et brukes til å lese vegobjekter. Les mer om bruk av API-et på https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v4/Vegobjekter
 *
 * The version of the OpenAPI document: v4
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.vt.nvdb.vegobjekter.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Adresse
 */
@JsonPropertyOrder({
  Adresse.JSON_PROPERTY_NAVN,
  Adresse.JSON_PROPERTY_ADRESSEKODE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class Adresse {
  public static final String JSON_PROPERTY_NAVN = "navn";
  @jakarta.annotation.Nonnull
  private String navn;

  public static final String JSON_PROPERTY_ADRESSEKODE = "adressekode";
  @jakarta.annotation.Nonnull
  private Integer adressekode;

  public Adresse() {
  }

  public Adresse navn(@jakarta.annotation.Nonnull String navn) {
    
    this.navn = navn;
    return this;
  }

  /**
   * Get navn
   * @return navn
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAVN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNavn() {
    return navn;
  }


  @JsonProperty(JSON_PROPERTY_NAVN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNavn(@jakarta.annotation.Nonnull String navn) {
    this.navn = navn;
  }

  public Adresse adressekode(@jakarta.annotation.Nonnull Integer adressekode) {
    
    this.adressekode = adressekode;
    return this;
  }

  /**
   * Get adressekode
   * @return adressekode
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ADRESSEKODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getAdressekode() {
    return adressekode;
  }


  @JsonProperty(JSON_PROPERTY_ADRESSEKODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAdressekode(@jakarta.annotation.Nonnull Integer adressekode) {
    this.adressekode = adressekode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Adresse adresse = (Adresse) o;
    return Objects.equals(this.navn, adresse.navn) &&
        Objects.equals(this.adressekode, adresse.adressekode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(navn, adressekode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Adresse {\n");
    sb.append("    navn: ").append(toIndentedString(navn)).append("\n");
    sb.append("    adressekode: ").append(toIndentedString(adressekode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * NVDB API Les Vegobjekter
 * Dette API-et brukes til å lese vegobjekter. Les mer om bruk av API-et på https://nvdb.atlas.vegvesen.no/produkter/nvdbapil/v4/Vegobjekter
 *
 * The version of the OpenAPI document: v4
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.vt.nvdb.vegobjekter.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import no.vegvesen.vt.nvdb.vegobjekter.model.Adresse;
import no.vegvesen.vt.nvdb.vegobjekter.model.Geometri;
import no.vegvesen.vt.nvdb.vegobjekter.model.Kontraktsomrade;
import no.vegvesen.vt.nvdb.vegobjekter.model.Riksvegrute;
import no.vegvesen.vt.nvdb.vegobjekter.model.Stedfesting;
import no.vegvesen.vt.nvdb.vegobjekter.model.Vegforvalter;
import no.vegvesen.vt.nvdb.vegobjekter.model.Vegsystemreferanse;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Lokasjon
 */
@JsonPropertyOrder({
  Lokasjon.JSON_PROPERTY_KOMMUNER,
  Lokasjon.JSON_PROPERTY_FYLKER,
  Lokasjon.JSON_PROPERTY_KONTRAKTSOMRåDER,
  Lokasjon.JSON_PROPERTY_RIKSVEGRUTER,
  Lokasjon.JSON_PROPERTY_VEGFORVALTERE,
  Lokasjon.JSON_PROPERTY_ADRESSER,
  Lokasjon.JSON_PROPERTY_VEGSYSTEMREFERANSER,
  Lokasjon.JSON_PROPERTY_STEDFESTINGER,
  Lokasjon.JSON_PROPERTY_GEOMETRI,
  Lokasjon.JSON_PROPERTY_LENGDE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class Lokasjon {
  public static final String JSON_PROPERTY_KOMMUNER = "kommuner";
  @jakarta.annotation.Nonnull
  private List<Integer> kommuner = new ArrayList<>();

  public static final String JSON_PROPERTY_FYLKER = "fylker";
  @jakarta.annotation.Nonnull
  private List<Integer> fylker = new ArrayList<>();

  public static final String JSON_PROPERTY_KONTRAKTSOMRåDER = "kontraktsområder";
  @jakarta.annotation.Nullable
  private List<Kontraktsomrade> kontraktsområder = new ArrayList<>();

  public static final String JSON_PROPERTY_RIKSVEGRUTER = "riksvegruter";
  @jakarta.annotation.Nullable
  private List<Riksvegrute> riksvegruter = new ArrayList<>();

  public static final String JSON_PROPERTY_VEGFORVALTERE = "vegforvaltere";
  @jakarta.annotation.Nullable
  private List<Vegforvalter> vegforvaltere = new ArrayList<>();

  public static final String JSON_PROPERTY_ADRESSER = "adresser";
  @jakarta.annotation.Nullable
  private List<Adresse> adresser = new ArrayList<>();

  public static final String JSON_PROPERTY_VEGSYSTEMREFERANSER = "vegsystemreferanser";
  @jakarta.annotation.Nullable
  private List<Vegsystemreferanse> vegsystemreferanser = new ArrayList<>();

  public static final String JSON_PROPERTY_STEDFESTINGER = "stedfestinger";
  @jakarta.annotation.Nullable
  private List<Stedfesting> stedfestinger = new ArrayList<>();

  public static final String JSON_PROPERTY_GEOMETRI = "geometri";
  @jakarta.annotation.Nullable
  private Geometri geometri;

  public static final String JSON_PROPERTY_LENGDE = "lengde";
  @jakarta.annotation.Nullable
  private Double lengde;

  public Lokasjon() {
  }

  public Lokasjon kommuner(@jakarta.annotation.Nonnull List<Integer> kommuner) {
    
    this.kommuner = kommuner;
    return this;
  }

  public Lokasjon addKommunerItem(Integer kommunerItem) {
    if (this.kommuner == null) {
      this.kommuner = new ArrayList<>();
    }
    this.kommuner.add(kommunerItem);
    return this;
  }

  /**
   * Get kommuner
   * @return kommuner
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KOMMUNER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Integer> getKommuner() {
    return kommuner;
  }


  @JsonProperty(JSON_PROPERTY_KOMMUNER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKommuner(@jakarta.annotation.Nonnull List<Integer> kommuner) {
    this.kommuner = kommuner;
  }

  public Lokasjon fylker(@jakarta.annotation.Nonnull List<Integer> fylker) {
    
    this.fylker = fylker;
    return this;
  }

  public Lokasjon addFylkerItem(Integer fylkerItem) {
    if (this.fylker == null) {
      this.fylker = new ArrayList<>();
    }
    this.fylker.add(fylkerItem);
    return this;
  }

  /**
   * Get fylker
   * @return fylker
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FYLKER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Integer> getFylker() {
    return fylker;
  }


  @JsonProperty(JSON_PROPERTY_FYLKER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFylker(@jakarta.annotation.Nonnull List<Integer> fylker) {
    this.fylker = fylker;
  }

  public Lokasjon kontraktsområder(@jakarta.annotation.Nullable List<Kontraktsomrade> kontraktsområder) {
    
    this.kontraktsområder = kontraktsområder;
    return this;
  }

  public Lokasjon addKontraktsområderItem(Kontraktsomrade kontraktsområderItem) {
    if (this.kontraktsområder == null) {
      this.kontraktsområder = new ArrayList<>();
    }
    this.kontraktsområder.add(kontraktsområderItem);
    return this;
  }

  /**
   * Utelatt om vegobjektet ikke overlapper med noen kontraktsområder
   * @return kontraktsområder
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KONTRAKTSOMRåDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Kontraktsomrade> getKontraktsområder() {
    return kontraktsområder;
  }


  @JsonProperty(JSON_PROPERTY_KONTRAKTSOMRåDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKontraktsområder(@jakarta.annotation.Nullable List<Kontraktsomrade> kontraktsområder) {
    this.kontraktsområder = kontraktsområder;
  }

  public Lokasjon riksvegruter(@jakarta.annotation.Nullable List<Riksvegrute> riksvegruter) {
    
    this.riksvegruter = riksvegruter;
    return this;
  }

  public Lokasjon addRiksvegruterItem(Riksvegrute riksvegruterItem) {
    if (this.riksvegruter == null) {
      this.riksvegruter = new ArrayList<>();
    }
    this.riksvegruter.add(riksvegruterItem);
    return this;
  }

  /**
   * Utelatt om vegobjektet ikke overlapper med noen riksvegruter
   * @return riksvegruter
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RIKSVEGRUTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Riksvegrute> getRiksvegruter() {
    return riksvegruter;
  }


  @JsonProperty(JSON_PROPERTY_RIKSVEGRUTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRiksvegruter(@jakarta.annotation.Nullable List<Riksvegrute> riksvegruter) {
    this.riksvegruter = riksvegruter;
  }

  public Lokasjon vegforvaltere(@jakarta.annotation.Nullable List<Vegforvalter> vegforvaltere) {
    
    this.vegforvaltere = vegforvaltere;
    return this;
  }

  public Lokasjon addVegforvaltereItem(Vegforvalter vegforvaltereItem) {
    if (this.vegforvaltere == null) {
      this.vegforvaltere = new ArrayList<>();
    }
    this.vegforvaltere.add(vegforvaltereItem);
    return this;
  }

  /**
   * Utelatt om vegobjektet ikke overlapper med noen vegforvaltere
   * @return vegforvaltere
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VEGFORVALTERE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Vegforvalter> getVegforvaltere() {
    return vegforvaltere;
  }


  @JsonProperty(JSON_PROPERTY_VEGFORVALTERE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVegforvaltere(@jakarta.annotation.Nullable List<Vegforvalter> vegforvaltere) {
    this.vegforvaltere = vegforvaltere;
  }

  public Lokasjon adresser(@jakarta.annotation.Nullable List<Adresse> adresser) {
    
    this.adresser = adresser;
    return this;
  }

  public Lokasjon addAdresserItem(Adresse adresserItem) {
    if (this.adresser == null) {
      this.adresser = new ArrayList<>();
    }
    this.adresser.add(adresserItem);
    return this;
  }

  /**
   * Utelatt om vegobjektet ikke overlapper med noen adresser
   * @return adresser
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADRESSER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Adresse> getAdresser() {
    return adresser;
  }


  @JsonProperty(JSON_PROPERTY_ADRESSER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdresser(@jakarta.annotation.Nullable List<Adresse> adresser) {
    this.adresser = adresser;
  }

  public Lokasjon vegsystemreferanser(@jakarta.annotation.Nullable List<Vegsystemreferanse> vegsystemreferanser) {
    
    this.vegsystemreferanser = vegsystemreferanser;
    return this;
  }

  public Lokasjon addVegsystemreferanserItem(Vegsystemreferanse vegsystemreferanserItem) {
    if (this.vegsystemreferanser == null) {
      this.vegsystemreferanser = new ArrayList<>();
    }
    this.vegsystemreferanser.add(vegsystemreferanserItem);
    return this;
  }

  /**
   * Utelatt om vegobjektet ikke har noen vegsystemreferanser
   * @return vegsystemreferanser
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VEGSYSTEMREFERANSER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Vegsystemreferanse> getVegsystemreferanser() {
    return vegsystemreferanser;
  }


  @JsonProperty(JSON_PROPERTY_VEGSYSTEMREFERANSER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVegsystemreferanser(@jakarta.annotation.Nullable List<Vegsystemreferanse> vegsystemreferanser) {
    this.vegsystemreferanser = vegsystemreferanser;
  }

  public Lokasjon stedfestinger(@jakarta.annotation.Nullable List<Stedfesting> stedfestinger) {
    
    this.stedfestinger = stedfestinger;
    return this;
  }

  public Lokasjon addStedfestingerItem(Stedfesting stedfestingerItem) {
    if (this.stedfestinger == null) {
      this.stedfestinger = new ArrayList<>();
    }
    this.stedfestinger.add(stedfestingerItem);
    return this;
  }

  /**
   * Utelatt om vegobjektet ikke har noen stedfestinger
   * @return stedfestinger
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STEDFESTINGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Stedfesting> getStedfestinger() {
    return stedfestinger;
  }


  @JsonProperty(JSON_PROPERTY_STEDFESTINGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStedfestinger(@jakarta.annotation.Nullable List<Stedfesting> stedfestinger) {
    this.stedfestinger = stedfestinger;
  }

  public Lokasjon geometri(@jakarta.annotation.Nullable Geometri geometri) {
    
    this.geometri = geometri;
    return this;
  }

  /**
   * Kun med om inkludergeometri&#x3D;lokasjon eller inkludergeometri ikke er oppgitt
   * @return geometri
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GEOMETRI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Geometri getGeometri() {
    return geometri;
  }


  @JsonProperty(JSON_PROPERTY_GEOMETRI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGeometri(@jakarta.annotation.Nullable Geometri geometri) {
    this.geometri = geometri;
  }

  public Lokasjon lengde(@jakarta.annotation.Nullable Double lengde) {
    
    this.lengde = lengde;
    return this;
  }

  /**
   * Utelatt om lengde er lik 0
   * @return lengde
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LENGDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getLengde() {
    return lengde;
  }


  @JsonProperty(JSON_PROPERTY_LENGDE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLengde(@jakarta.annotation.Nullable Double lengde) {
    this.lengde = lengde;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Lokasjon lokasjon = (Lokasjon) o;
    return Objects.equals(this.kommuner, lokasjon.kommuner) &&
        Objects.equals(this.fylker, lokasjon.fylker) &&
        Objects.equals(this.kontraktsområder, lokasjon.kontraktsområder) &&
        Objects.equals(this.riksvegruter, lokasjon.riksvegruter) &&
        Objects.equals(this.vegforvaltere, lokasjon.vegforvaltere) &&
        Objects.equals(this.adresser, lokasjon.adresser) &&
        Objects.equals(this.vegsystemreferanser, lokasjon.vegsystemreferanser) &&
        Objects.equals(this.stedfestinger, lokasjon.stedfestinger) &&
        Objects.equals(this.geometri, lokasjon.geometri) &&
        Objects.equals(this.lengde, lokasjon.lengde);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kommuner, fylker, kontraktsområder, riksvegruter, vegforvaltere, adresser, vegsystemreferanser, stedfestinger, geometri, lengde);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Lokasjon {\n");
    sb.append("    kommuner: ").append(toIndentedString(kommuner)).append("\n");
    sb.append("    fylker: ").append(toIndentedString(fylker)).append("\n");
    sb.append("    kontraktsområder: ").append(toIndentedString(kontraktsområder)).append("\n");
    sb.append("    riksvegruter: ").append(toIndentedString(riksvegruter)).append("\n");
    sb.append("    vegforvaltere: ").append(toIndentedString(vegforvaltere)).append("\n");
    sb.append("    adresser: ").append(toIndentedString(adresser)).append("\n");
    sb.append("    vegsystemreferanser: ").append(toIndentedString(vegsystemreferanser)).append("\n");
    sb.append("    stedfestinger: ").append(toIndentedString(stedfestinger)).append("\n");
    sb.append("    geometri: ").append(toIndentedString(geometri)).append("\n");
    sb.append("    lengde: ").append(toIndentedString(lengde)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


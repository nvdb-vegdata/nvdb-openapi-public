/*
 * NVDB API Les Vegnett
 * Dette API-et brukes til å lese vegnettelementer. Les mer om bruk av API-et på https://nvdb.test.atlas.vegvesen.no/produkter/nvdbapil/v4/Vegnett
 *
 * The version of the OpenAPI document: v4
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.vt.nvdb.vegnett.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import no.vegvesen.vt.nvdb.vegnett.model.VeglenkeportTilkobling;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Veglenkeport
 */
@JsonPropertyOrder({
  Veglenkeport.JSON_PROPERTY_ID,
  Veglenkeport.JSON_PROPERTY_RELATIV_POSISJON,
  Veglenkeport.JSON_PROPERTY_TILKOBLING
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class Veglenkeport {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private Integer id;

  public static final String JSON_PROPERTY_RELATIV_POSISJON = "relativPosisjon";
  @jakarta.annotation.Nonnull
  private Double relativPosisjon;

  public static final String JSON_PROPERTY_TILKOBLING = "tilkobling";
  @jakarta.annotation.Nonnull
  private VeglenkeportTilkobling tilkobling;

  public Veglenkeport() {
  }

  public Veglenkeport id(@jakarta.annotation.Nonnull Integer id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull Integer id) {
    this.id = id;
  }

  public Veglenkeport relativPosisjon(@jakarta.annotation.Nonnull Double relativPosisjon) {
    
    this.relativPosisjon = relativPosisjon;
    return this;
  }

  /**
   * Get relativPosisjon
   * @return relativPosisjon
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RELATIV_POSISJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getRelativPosisjon() {
    return relativPosisjon;
  }


  @JsonProperty(JSON_PROPERTY_RELATIV_POSISJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRelativPosisjon(@jakarta.annotation.Nonnull Double relativPosisjon) {
    this.relativPosisjon = relativPosisjon;
  }

  public Veglenkeport tilkobling(@jakarta.annotation.Nonnull VeglenkeportTilkobling tilkobling) {
    
    this.tilkobling = tilkobling;
    return this;
  }

  /**
   * Get tilkobling
   * @return tilkobling
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TILKOBLING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public VeglenkeportTilkobling getTilkobling() {
    return tilkobling;
  }


  @JsonProperty(JSON_PROPERTY_TILKOBLING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTilkobling(@jakarta.annotation.Nonnull VeglenkeportTilkobling tilkobling) {
    this.tilkobling = tilkobling;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Veglenkeport veglenkeport = (Veglenkeport) o;
    return Objects.equals(this.id, veglenkeport.id) &&
        Objects.equals(this.relativPosisjon, veglenkeport.relativPosisjon) &&
        Objects.equals(this.tilkobling, veglenkeport.tilkobling);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, relativPosisjon, tilkobling);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Veglenkeport {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    relativPosisjon: ").append(toIndentedString(relativPosisjon)).append("\n");
    sb.append("    tilkobling: ").append(toIndentedString(tilkobling)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * NVDB API Les Vegnett
 * Dette API-et brukes til å lese vegnettelementer. Les mer om bruk av API-et på https://nvdb.test.atlas.vegvesen.no/produkter/nvdbapil/v4/Vegnett
 *
 * The version of the OpenAPI document: v4
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.vt.nvdb.vegnett.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import no.vegvesen.vt.nvdb.vegnett.model.Retning;
import no.vegvesen.vt.nvdb.vegnett.model.Trafikantgruppe;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Sideanlegg
 */
@JsonPropertyOrder({
  Sideanlegg.JSON_PROPERTY_SIDEANLEGG,
  Sideanlegg.JSON_PROPERTY_SIDEANLEGGSDEL,
  Sideanlegg.JSON_PROPERTY_RETNING,
  Sideanlegg.JSON_PROPERTY_TRAFIKANTGRUPPE,
  Sideanlegg.JSON_PROPERTY_METER,
  Sideanlegg.JSON_PROPERTY_FRA_METER,
  Sideanlegg.JSON_PROPERTY_TIL_METER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class Sideanlegg {
  public static final String JSON_PROPERTY_SIDEANLEGG = "sideanlegg";
  @jakarta.annotation.Nonnull
  private Integer sideanlegg;

  public static final String JSON_PROPERTY_SIDEANLEGGSDEL = "sideanleggsdel";
  @jakarta.annotation.Nonnull
  private Integer sideanleggsdel;

  public static final String JSON_PROPERTY_RETNING = "retning";
  @jakarta.annotation.Nonnull
  private Retning retning;

  public static final String JSON_PROPERTY_TRAFIKANTGRUPPE = "trafikantgruppe";
  @jakarta.annotation.Nonnull
  private Trafikantgruppe trafikantgruppe;

  public static final String JSON_PROPERTY_METER = "meter";
  @jakarta.annotation.Nullable
  private Double meter;

  public static final String JSON_PROPERTY_FRA_METER = "fra_meter";
  @jakarta.annotation.Nullable
  private Double fraMeter;

  public static final String JSON_PROPERTY_TIL_METER = "til_meter";
  @jakarta.annotation.Nullable
  private Double tilMeter;

  public Sideanlegg() {
  }

  public Sideanlegg sideanlegg(@jakarta.annotation.Nonnull Integer sideanlegg) {
    
    this.sideanlegg = sideanlegg;
    return this;
  }

  /**
   * Get sideanlegg
   * @return sideanlegg
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SIDEANLEGG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSideanlegg() {
    return sideanlegg;
  }


  @JsonProperty(JSON_PROPERTY_SIDEANLEGG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSideanlegg(@jakarta.annotation.Nonnull Integer sideanlegg) {
    this.sideanlegg = sideanlegg;
  }

  public Sideanlegg sideanleggsdel(@jakarta.annotation.Nonnull Integer sideanleggsdel) {
    
    this.sideanleggsdel = sideanleggsdel;
    return this;
  }

  /**
   * Get sideanleggsdel
   * @return sideanleggsdel
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SIDEANLEGGSDEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSideanleggsdel() {
    return sideanleggsdel;
  }


  @JsonProperty(JSON_PROPERTY_SIDEANLEGGSDEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSideanleggsdel(@jakarta.annotation.Nonnull Integer sideanleggsdel) {
    this.sideanleggsdel = sideanleggsdel;
  }

  public Sideanlegg retning(@jakarta.annotation.Nonnull Retning retning) {
    
    this.retning = retning;
    return this;
  }

  /**
   * Get retning
   * @return retning
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RETNING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Retning getRetning() {
    return retning;
  }


  @JsonProperty(JSON_PROPERTY_RETNING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRetning(@jakarta.annotation.Nonnull Retning retning) {
    this.retning = retning;
  }

  public Sideanlegg trafikantgruppe(@jakarta.annotation.Nonnull Trafikantgruppe trafikantgruppe) {
    
    this.trafikantgruppe = trafikantgruppe;
    return this;
  }

  /**
   * Get trafikantgruppe
   * @return trafikantgruppe
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRAFIKANTGRUPPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Trafikantgruppe getTrafikantgruppe() {
    return trafikantgruppe;
  }


  @JsonProperty(JSON_PROPERTY_TRAFIKANTGRUPPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTrafikantgruppe(@jakarta.annotation.Nonnull Trafikantgruppe trafikantgruppe) {
    this.trafikantgruppe = trafikantgruppe;
  }

  public Sideanlegg meter(@jakarta.annotation.Nullable Double meter) {
    
    this.meter = meter;
    return this;
  }

  /**
   * Get meter
   * @return meter
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMeter() {
    return meter;
  }


  @JsonProperty(JSON_PROPERTY_METER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMeter(@jakarta.annotation.Nullable Double meter) {
    this.meter = meter;
  }

  public Sideanlegg fraMeter(@jakarta.annotation.Nullable Double fraMeter) {
    
    this.fraMeter = fraMeter;
    return this;
  }

  /**
   * Get fraMeter
   * @return fraMeter
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FRA_METER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getFraMeter() {
    return fraMeter;
  }


  @JsonProperty(JSON_PROPERTY_FRA_METER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFraMeter(@jakarta.annotation.Nullable Double fraMeter) {
    this.fraMeter = fraMeter;
  }

  public Sideanlegg tilMeter(@jakarta.annotation.Nullable Double tilMeter) {
    
    this.tilMeter = tilMeter;
    return this;
  }

  /**
   * Get tilMeter
   * @return tilMeter
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIL_METER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTilMeter() {
    return tilMeter;
  }


  @JsonProperty(JSON_PROPERTY_TIL_METER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTilMeter(@jakarta.annotation.Nullable Double tilMeter) {
    this.tilMeter = tilMeter;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Sideanlegg sideanlegg = (Sideanlegg) o;
    return Objects.equals(this.sideanlegg, sideanlegg.sideanlegg) &&
        Objects.equals(this.sideanleggsdel, sideanlegg.sideanleggsdel) &&
        Objects.equals(this.retning, sideanlegg.retning) &&
        Objects.equals(this.trafikantgruppe, sideanlegg.trafikantgruppe) &&
        Objects.equals(this.meter, sideanlegg.meter) &&
        Objects.equals(this.fraMeter, sideanlegg.fraMeter) &&
        Objects.equals(this.tilMeter, sideanlegg.tilMeter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sideanlegg, sideanleggsdel, retning, trafikantgruppe, meter, fraMeter, tilMeter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Sideanlegg {\n");
    sb.append("    sideanlegg: ").append(toIndentedString(sideanlegg)).append("\n");
    sb.append("    sideanleggsdel: ").append(toIndentedString(sideanleggsdel)).append("\n");
    sb.append("    retning: ").append(toIndentedString(retning)).append("\n");
    sb.append("    trafikantgruppe: ").append(toIndentedString(trafikantgruppe)).append("\n");
    sb.append("    meter: ").append(toIndentedString(meter)).append("\n");
    sb.append("    fraMeter: ").append(toIndentedString(fraMeter)).append("\n");
    sb.append("    tilMeter: ").append(toIndentedString(tilMeter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


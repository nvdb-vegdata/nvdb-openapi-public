/*
 * NVDB API Les Vegnett
 * Dette API-et brukes til å lese vegnettelementer. Les mer om bruk av API-et på https://nvdb.test.atlas.vegvesen.no/produkter/nvdbapil/v4/Vegnett
 *
 * The version of the OpenAPI document: v4
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.vt.nvdb.vegnett.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import no.vegvesen.vt.nvdb.vegnett.model.Retning;
import no.vegvesen.vt.nvdb.vegnett.model.Sideposisjon;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Superstedfesting
 */
@JsonPropertyOrder({
  Superstedfesting.JSON_PROPERTY_VEGLENKESEKVENSID,
  Superstedfesting.JSON_PROPERTY_STARTPOSISJON,
  Superstedfesting.JSON_PROPERTY_SLUTTPOSISJON,
  Superstedfesting.JSON_PROPERTY_RETNING,
  Superstedfesting.JSON_PROPERTY_KJøREFELT,
  Superstedfesting.JSON_PROPERTY_SIDEPOSISJON
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class Superstedfesting {
  public static final String JSON_PROPERTY_VEGLENKESEKVENSID = "veglenkesekvensid";
  @jakarta.annotation.Nonnull
  private Long veglenkesekvensid;

  public static final String JSON_PROPERTY_STARTPOSISJON = "startposisjon";
  @jakarta.annotation.Nonnull
  private Double startposisjon;

  public static final String JSON_PROPERTY_SLUTTPOSISJON = "sluttposisjon";
  @jakarta.annotation.Nonnull
  private Double sluttposisjon;

  public static final String JSON_PROPERTY_RETNING = "retning";
  @jakarta.annotation.Nonnull
  private Retning retning;

  public static final String JSON_PROPERTY_KJøREFELT = "kjørefelt";
  @jakarta.annotation.Nonnull
  private List<String> kjørefelt = new ArrayList<>();

  public static final String JSON_PROPERTY_SIDEPOSISJON = "sideposisjon";
  @jakarta.annotation.Nullable
  private Sideposisjon sideposisjon;

  public Superstedfesting() {
  }

  public Superstedfesting veglenkesekvensid(@jakarta.annotation.Nonnull Long veglenkesekvensid) {
    
    this.veglenkesekvensid = veglenkesekvensid;
    return this;
  }

  /**
   * Get veglenkesekvensid
   * @return veglenkesekvensid
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VEGLENKESEKVENSID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getVeglenkesekvensid() {
    return veglenkesekvensid;
  }


  @JsonProperty(JSON_PROPERTY_VEGLENKESEKVENSID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVeglenkesekvensid(@jakarta.annotation.Nonnull Long veglenkesekvensid) {
    this.veglenkesekvensid = veglenkesekvensid;
  }

  public Superstedfesting startposisjon(@jakarta.annotation.Nonnull Double startposisjon) {
    
    this.startposisjon = startposisjon;
    return this;
  }

  /**
   * Get startposisjon
   * @return startposisjon
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STARTPOSISJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getStartposisjon() {
    return startposisjon;
  }


  @JsonProperty(JSON_PROPERTY_STARTPOSISJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartposisjon(@jakarta.annotation.Nonnull Double startposisjon) {
    this.startposisjon = startposisjon;
  }

  public Superstedfesting sluttposisjon(@jakarta.annotation.Nonnull Double sluttposisjon) {
    
    this.sluttposisjon = sluttposisjon;
    return this;
  }

  /**
   * Get sluttposisjon
   * @return sluttposisjon
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SLUTTPOSISJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getSluttposisjon() {
    return sluttposisjon;
  }


  @JsonProperty(JSON_PROPERTY_SLUTTPOSISJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSluttposisjon(@jakarta.annotation.Nonnull Double sluttposisjon) {
    this.sluttposisjon = sluttposisjon;
  }

  public Superstedfesting retning(@jakarta.annotation.Nonnull Retning retning) {
    
    this.retning = retning;
    return this;
  }

  /**
   * Get retning
   * @return retning
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RETNING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Retning getRetning() {
    return retning;
  }


  @JsonProperty(JSON_PROPERTY_RETNING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRetning(@jakarta.annotation.Nonnull Retning retning) {
    this.retning = retning;
  }

  public Superstedfesting kjørefelt(@jakarta.annotation.Nonnull List<String> kjørefelt) {
    
    this.kjørefelt = kjørefelt;
    return this;
  }

  public Superstedfesting addKjørefeltItem(String kjørefeltItem) {
    if (this.kjørefelt == null) {
      this.kjørefelt = new ArrayList<>();
    }
    this.kjørefelt.add(kjørefeltItem);
    return this;
  }

  /**
   * Get kjørefelt
   * @return kjørefelt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KJøREFELT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getKjørefelt() {
    return kjørefelt;
  }


  @JsonProperty(JSON_PROPERTY_KJøREFELT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKjørefelt(@jakarta.annotation.Nonnull List<String> kjørefelt) {
    this.kjørefelt = kjørefelt;
  }

  public Superstedfesting sideposisjon(@jakarta.annotation.Nullable Sideposisjon sideposisjon) {
    
    this.sideposisjon = sideposisjon;
    return this;
  }

  /**
   * Get sideposisjon
   * @return sideposisjon
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SIDEPOSISJON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Sideposisjon getSideposisjon() {
    return sideposisjon;
  }


  @JsonProperty(JSON_PROPERTY_SIDEPOSISJON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSideposisjon(@jakarta.annotation.Nullable Sideposisjon sideposisjon) {
    this.sideposisjon = sideposisjon;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Superstedfesting superstedfesting = (Superstedfesting) o;
    return Objects.equals(this.veglenkesekvensid, superstedfesting.veglenkesekvensid) &&
        Objects.equals(this.startposisjon, superstedfesting.startposisjon) &&
        Objects.equals(this.sluttposisjon, superstedfesting.sluttposisjon) &&
        Objects.equals(this.retning, superstedfesting.retning) &&
        Objects.equals(this.kjørefelt, superstedfesting.kjørefelt) &&
        Objects.equals(this.sideposisjon, superstedfesting.sideposisjon);
  }

  @Override
  public int hashCode() {
    return Objects.hash(veglenkesekvensid, startposisjon, sluttposisjon, retning, kjørefelt, sideposisjon);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Superstedfesting {\n");
    sb.append("    veglenkesekvensid: ").append(toIndentedString(veglenkesekvensid)).append("\n");
    sb.append("    startposisjon: ").append(toIndentedString(startposisjon)).append("\n");
    sb.append("    sluttposisjon: ").append(toIndentedString(sluttposisjon)).append("\n");
    sb.append("    retning: ").append(toIndentedString(retning)).append("\n");
    sb.append("    kjørefelt: ").append(toIndentedString(kjørefelt)).append("\n");
    sb.append("    sideposisjon: ").append(toIndentedString(sideposisjon)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


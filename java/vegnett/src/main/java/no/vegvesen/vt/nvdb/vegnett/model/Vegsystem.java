/*
 * NVDB API Les Vegnett
 * Dette API-et brukes til å lese vegnettelementer. Les mer om bruk av API-et på https://nvdb.test.atlas.vegvesen.no/produkter/nvdbapil/v4/Vegnett
 *
 * The version of the OpenAPI document: v4
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.vt.nvdb.vegnett.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import no.vegvesen.vt.nvdb.vegnett.model.Vegfase;
import no.vegvesen.vt.nvdb.vegnett.model.Vegkategori;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Vegsystem
 */
@JsonPropertyOrder({
  Vegsystem.JSON_PROPERTY_VEGKATEGORI,
  Vegsystem.JSON_PROPERTY_FASE,
  Vegsystem.JSON_PROPERTY_NUMMER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class Vegsystem {
  public static final String JSON_PROPERTY_VEGKATEGORI = "vegkategori";
  @jakarta.annotation.Nonnull
  private Vegkategori vegkategori;

  public static final String JSON_PROPERTY_FASE = "fase";
  @jakarta.annotation.Nonnull
  private Vegfase fase;

  public static final String JSON_PROPERTY_NUMMER = "nummer";
  @jakarta.annotation.Nullable
  private Integer nummer;

  public Vegsystem() {
  }

  public Vegsystem vegkategori(@jakarta.annotation.Nonnull Vegkategori vegkategori) {
    
    this.vegkategori = vegkategori;
    return this;
  }

  /**
   * Get vegkategori
   * @return vegkategori
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VEGKATEGORI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Vegkategori getVegkategori() {
    return vegkategori;
  }


  @JsonProperty(JSON_PROPERTY_VEGKATEGORI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVegkategori(@jakarta.annotation.Nonnull Vegkategori vegkategori) {
    this.vegkategori = vegkategori;
  }

  public Vegsystem fase(@jakarta.annotation.Nonnull Vegfase fase) {
    
    this.fase = fase;
    return this;
  }

  /**
   * Get fase
   * @return fase
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FASE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Vegfase getFase() {
    return fase;
  }


  @JsonProperty(JSON_PROPERTY_FASE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFase(@jakarta.annotation.Nonnull Vegfase fase) {
    this.fase = fase;
  }

  public Vegsystem nummer(@jakarta.annotation.Nullable Integer nummer) {
    
    this.nummer = nummer;
    return this;
  }

  /**
   * Get nummer
   * @return nummer
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NUMMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNummer() {
    return nummer;
  }


  @JsonProperty(JSON_PROPERTY_NUMMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNummer(@jakarta.annotation.Nullable Integer nummer) {
    this.nummer = nummer;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vegsystem vegsystem = (Vegsystem) o;
    return Objects.equals(this.vegkategori, vegsystem.vegkategori) &&
        Objects.equals(this.fase, vegsystem.fase) &&
        Objects.equals(this.nummer, vegsystem.nummer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vegkategori, fase, nummer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vegsystem {\n");
    sb.append("    vegkategori: ").append(toIndentedString(vegkategori)).append("\n");
    sb.append("    fase: ").append(toIndentedString(fase)).append("\n");
    sb.append("    nummer: ").append(toIndentedString(nummer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


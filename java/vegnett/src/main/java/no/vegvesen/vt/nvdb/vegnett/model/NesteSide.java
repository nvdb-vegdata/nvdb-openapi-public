/*
 * NVDB API Les Vegnett
 * Dette API-et brukes til å lese vegnettelementer. Les mer om bruk av API-et på https://nvdb.test.atlas.vegvesen.no/produkter/nvdbapil/v4/Vegnett
 *
 * The version of the OpenAPI document: v4
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.vt.nvdb.vegnett.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * NesteSide
 */
@JsonPropertyOrder({
  NesteSide.JSON_PROPERTY_START,
  NesteSide.JSON_PROPERTY_HREF
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class NesteSide {
  public static final String JSON_PROPERTY_START = "start";
  @jakarta.annotation.Nonnull
  private String start;

  public static final String JSON_PROPERTY_HREF = "href";
  @jakarta.annotation.Nonnull
  private String href;

  public NesteSide() {
  }

  public NesteSide start(@jakarta.annotation.Nonnull String start) {
    
    this.start = start;
    return this;
  }

  /**
   * Get start
   * @return start
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStart() {
    return start;
  }


  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStart(@jakarta.annotation.Nonnull String start) {
    this.start = start;
  }

  public NesteSide href(@jakarta.annotation.Nonnull String href) {
    
    this.href = href;
    return this;
  }

  /**
   * Get href
   * @return href
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHref(@jakarta.annotation.Nonnull String href) {
    this.href = href;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NesteSide nesteSide = (NesteSide) o;
    return Objects.equals(this.start, nesteSide.start) &&
        Objects.equals(this.href, nesteSide.href);
  }

  @Override
  public int hashCode() {
    return Objects.hash(start, href);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NesteSide {\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * NVDB API Les Vegnett
 * Dette API-et brukes til å lese vegnettelementer. Les mer om bruk av API-et på https://nvdb.test.atlas.vegvesen.no/produkter/nvdbapil/v4/Vegnett
 *
 * The version of the OpenAPI document: v4
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.vt.nvdb.vegnett.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import no.vegvesen.vt.nvdb.vegnett.model.Segment;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Linje
 */
@JsonPropertyOrder({
  Linje.JSON_PROPERTY_VEGLENKESEKVENSID,
  Linje.JSON_PROPERTY_STARTPOSISJON,
  Linje.JSON_PROPERTY_SLUTTPOSISJON,
  Linje.JSON_PROPERTY_KORTFORM
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)

public class Linje extends Segment {
  public static final String JSON_PROPERTY_VEGLENKESEKVENSID = "veglenkesekvensid";
  @jakarta.annotation.Nonnull
  private Long veglenkesekvensid;

  public static final String JSON_PROPERTY_STARTPOSISJON = "startposisjon";
  @jakarta.annotation.Nonnull
  private Double startposisjon;

  public static final String JSON_PROPERTY_SLUTTPOSISJON = "sluttposisjon";
  @jakarta.annotation.Nonnull
  private Double sluttposisjon;

  public static final String JSON_PROPERTY_KORTFORM = "kortform";
  @jakarta.annotation.Nonnull
  private String kortform;

  public Linje() {

  }

  public Linje veglenkesekvensid(@jakarta.annotation.Nonnull Long veglenkesekvensid) {
    
    this.veglenkesekvensid = veglenkesekvensid;
    return this;
  }

  /**
   * Get veglenkesekvensid
   * @return veglenkesekvensid
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VEGLENKESEKVENSID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getVeglenkesekvensid() {
    return veglenkesekvensid;
  }


  @JsonProperty(JSON_PROPERTY_VEGLENKESEKVENSID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVeglenkesekvensid(@jakarta.annotation.Nonnull Long veglenkesekvensid) {
    this.veglenkesekvensid = veglenkesekvensid;
  }

  public Linje startposisjon(@jakarta.annotation.Nonnull Double startposisjon) {
    
    this.startposisjon = startposisjon;
    return this;
  }

  /**
   * Get startposisjon
   * @return startposisjon
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STARTPOSISJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getStartposisjon() {
    return startposisjon;
  }


  @JsonProperty(JSON_PROPERTY_STARTPOSISJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartposisjon(@jakarta.annotation.Nonnull Double startposisjon) {
    this.startposisjon = startposisjon;
  }

  public Linje sluttposisjon(@jakarta.annotation.Nonnull Double sluttposisjon) {
    
    this.sluttposisjon = sluttposisjon;
    return this;
  }

  /**
   * Get sluttposisjon
   * @return sluttposisjon
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SLUTTPOSISJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getSluttposisjon() {
    return sluttposisjon;
  }


  @JsonProperty(JSON_PROPERTY_SLUTTPOSISJON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSluttposisjon(@jakarta.annotation.Nonnull Double sluttposisjon) {
    this.sluttposisjon = sluttposisjon;
  }

  public Linje kortform(@jakarta.annotation.Nonnull String kortform) {
    
    this.kortform = kortform;
    return this;
  }

  /**
   * Get kortform
   * @return kortform
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KORTFORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getKortform() {
    return kortform;
  }


  @JsonProperty(JSON_PROPERTY_KORTFORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKortform(@jakarta.annotation.Nonnull String kortform) {
    this.kortform = kortform;
  }


  @Override
  public Linje type(@jakarta.annotation.Nonnull String type) {
    this.setType(type);
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Linje linje = (Linje) o;
    return Objects.equals(this.veglenkesekvensid, linje.veglenkesekvensid) &&
        Objects.equals(this.startposisjon, linje.startposisjon) &&
        Objects.equals(this.sluttposisjon, linje.sluttposisjon) &&
        Objects.equals(this.kortform, linje.kortform) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(veglenkesekvensid, startposisjon, sluttposisjon, kortform, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Linje {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    veglenkesekvensid: ").append(toIndentedString(veglenkesekvensid)).append("\n");
    sb.append("    startposisjon: ").append(toIndentedString(startposisjon)).append("\n");
    sb.append("    sluttposisjon: ").append(toIndentedString(sluttposisjon)).append("\n");
    sb.append("    kortform: ").append(toIndentedString(kortform)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


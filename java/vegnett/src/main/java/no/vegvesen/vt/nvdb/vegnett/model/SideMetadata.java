/*
 * NVDB API Les Vegnett
 * Dette API-et brukes til å lese vegnettelementer. Les mer om bruk av API-et på https://nvdb.test.atlas.vegvesen.no/produkter/nvdbapil/v4/Vegnett
 *
 * The version of the OpenAPI document: v4
 * Contact: nvdb@vegvesen.no
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.vegvesen.vt.nvdb.vegnett.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import no.vegvesen.vt.nvdb.vegnett.model.NesteSide;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SideMetadata
 */
@JsonPropertyOrder({
  SideMetadata.JSON_PROPERTY_ANTALL,
  SideMetadata.JSON_PROPERTY_RETURNERT,
  SideMetadata.JSON_PROPERTY_SIDESTøRRELSE,
  SideMetadata.JSON_PROPERTY_NESTE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class SideMetadata {
  public static final String JSON_PROPERTY_ANTALL = "antall";
  @jakarta.annotation.Nullable
  private Long antall;

  public static final String JSON_PROPERTY_RETURNERT = "returnert";
  @jakarta.annotation.Nonnull
  private Integer returnert;

  public static final String JSON_PROPERTY_SIDESTøRRELSE = "sidestørrelse";
  @jakarta.annotation.Nonnull
  private Integer sidestørrelse;

  public static final String JSON_PROPERTY_NESTE = "neste";
  @jakarta.annotation.Nullable
  private NesteSide neste;

  public SideMetadata() {
  }

  public SideMetadata antall(@jakarta.annotation.Nullable Long antall) {
    
    this.antall = antall;
    return this;
  }

  /**
   * Get antall
   * @return antall
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANTALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getAntall() {
    return antall;
  }


  @JsonProperty(JSON_PROPERTY_ANTALL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAntall(@jakarta.annotation.Nullable Long antall) {
    this.antall = antall;
  }

  public SideMetadata returnert(@jakarta.annotation.Nonnull Integer returnert) {
    
    this.returnert = returnert;
    return this;
  }

  /**
   * Get returnert
   * @return returnert
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RETURNERT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getReturnert() {
    return returnert;
  }


  @JsonProperty(JSON_PROPERTY_RETURNERT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReturnert(@jakarta.annotation.Nonnull Integer returnert) {
    this.returnert = returnert;
  }

  public SideMetadata sidestørrelse(@jakarta.annotation.Nonnull Integer sidestørrelse) {
    
    this.sidestørrelse = sidestørrelse;
    return this;
  }

  /**
   * Get sidestørrelse
   * @return sidestørrelse
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SIDESTøRRELSE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSidestørrelse() {
    return sidestørrelse;
  }


  @JsonProperty(JSON_PROPERTY_SIDESTøRRELSE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSidestørrelse(@jakarta.annotation.Nonnull Integer sidestørrelse) {
    this.sidestørrelse = sidestørrelse;
  }

  public SideMetadata neste(@jakarta.annotation.Nullable NesteSide neste) {
    
    this.neste = neste;
    return this;
  }

  /**
   * Get neste
   * @return neste
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NESTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NesteSide getNeste() {
    return neste;
  }


  @JsonProperty(JSON_PROPERTY_NESTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNeste(@jakarta.annotation.Nullable NesteSide neste) {
    this.neste = neste;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SideMetadata sideMetadata = (SideMetadata) o;
    return Objects.equals(this.antall, sideMetadata.antall) &&
        Objects.equals(this.returnert, sideMetadata.returnert) &&
        Objects.equals(this.sidestørrelse, sideMetadata.sidestørrelse) &&
        Objects.equals(this.neste, sideMetadata.neste);
  }

  @Override
  public int hashCode() {
    return Objects.hash(antall, returnert, sidestørrelse, neste);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SideMetadata {\n");
    sb.append("    antall: ").append(toIndentedString(antall)).append("\n");
    sb.append("    returnert: ").append(toIndentedString(returnert)).append("\n");
    sb.append("    sidestørrelse: ").append(toIndentedString(sidestørrelse)).append("\n");
    sb.append("    neste: ").append(toIndentedString(neste)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

